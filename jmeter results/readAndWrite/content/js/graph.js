/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 3048.0, "series": [{"data": [[0.0, 2.0], [0.1, 4.0], [0.2, 6.0], [0.3, 6.0], [0.4, 7.0], [0.5, 7.0], [0.6, 8.0], [0.7, 8.0], [0.8, 9.0], [0.9, 9.0], [1.0, 10.0], [1.1, 11.0], [1.2, 11.0], [1.3, 12.0], [1.4, 12.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 15.0], [1.9, 15.0], [2.0, 16.0], [2.1, 17.0], [2.2, 18.0], [2.3, 18.0], [2.4, 19.0], [2.5, 20.0], [2.6, 20.0], [2.7, 21.0], [2.8, 22.0], [2.9, 23.0], [3.0, 24.0], [3.1, 24.0], [3.2, 26.0], [3.3, 26.0], [3.4, 26.0], [3.5, 27.0], [3.6, 27.0], [3.7, 28.0], [3.8, 29.0], [3.9, 31.0], [4.0, 35.0], [4.1, 37.0], [4.2, 39.0], [4.3, 40.0], [4.4, 41.0], [4.5, 42.0], [4.6, 44.0], [4.7, 45.0], [4.8, 46.0], [4.9, 48.0], [5.0, 49.0], [5.1, 49.0], [5.2, 50.0], [5.3, 51.0], [5.4, 51.0], [5.5, 52.0], [5.6, 53.0], [5.7, 53.0], [5.8, 54.0], [5.9, 55.0], [6.0, 55.0], [6.1, 56.0], [6.2, 57.0], [6.3, 57.0], [6.4, 57.0], [6.5, 58.0], [6.6, 58.0], [6.7, 59.0], [6.8, 60.0], [6.9, 60.0], [7.0, 61.0], [7.1, 62.0], [7.2, 63.0], [7.3, 64.0], [7.4, 64.0], [7.5, 65.0], [7.6, 65.0], [7.7, 66.0], [7.8, 67.0], [7.9, 67.0], [8.0, 69.0], [8.1, 70.0], [8.2, 71.0], [8.3, 72.0], [8.4, 72.0], [8.5, 73.0], [8.6, 75.0], [8.7, 76.0], [8.8, 77.0], [8.9, 78.0], [9.0, 79.0], [9.1, 80.0], [9.2, 80.0], [9.3, 81.0], [9.4, 82.0], [9.5, 83.0], [9.6, 84.0], [9.7, 84.0], [9.8, 86.0], [9.9, 86.0], [10.0, 87.0], [10.1, 88.0], [10.2, 88.0], [10.3, 89.0], [10.4, 90.0], [10.5, 91.0], [10.6, 91.0], [10.7, 92.0], [10.8, 92.0], [10.9, 93.0], [11.0, 93.0], [11.1, 94.0], [11.2, 95.0], [11.3, 96.0], [11.4, 97.0], [11.5, 98.0], [11.6, 99.0], [11.7, 99.0], [11.8, 100.0], [11.9, 101.0], [12.0, 101.0], [12.1, 102.0], [12.2, 103.0], [12.3, 103.0], [12.4, 104.0], [12.5, 106.0], [12.6, 106.0], [12.7, 107.0], [12.8, 108.0], [12.9, 109.0], [13.0, 110.0], [13.1, 111.0], [13.2, 111.0], [13.3, 113.0], [13.4, 113.0], [13.5, 115.0], [13.6, 117.0], [13.7, 118.0], [13.8, 120.0], [13.9, 121.0], [14.0, 123.0], [14.1, 124.0], [14.2, 124.0], [14.3, 125.0], [14.4, 126.0], [14.5, 126.0], [14.6, 127.0], [14.7, 128.0], [14.8, 129.0], [14.9, 129.0], [15.0, 130.0], [15.1, 131.0], [15.2, 131.0], [15.3, 132.0], [15.4, 133.0], [15.5, 133.0], [15.6, 134.0], [15.7, 135.0], [15.8, 136.0], [15.9, 137.0], [16.0, 138.0], [16.1, 138.0], [16.2, 138.0], [16.3, 139.0], [16.4, 140.0], [16.5, 140.0], [16.6, 141.0], [16.7, 142.0], [16.8, 142.0], [16.9, 143.0], [17.0, 144.0], [17.1, 145.0], [17.2, 146.0], [17.3, 147.0], [17.4, 147.0], [17.5, 149.0], [17.6, 150.0], [17.7, 150.0], [17.8, 151.0], [17.9, 152.0], [18.0, 153.0], [18.1, 153.0], [18.2, 154.0], [18.3, 154.0], [18.4, 155.0], [18.5, 155.0], [18.6, 156.0], [18.7, 157.0], [18.8, 157.0], [18.9, 158.0], [19.0, 159.0], [19.1, 159.0], [19.2, 160.0], [19.3, 160.0], [19.4, 161.0], [19.5, 162.0], [19.6, 163.0], [19.7, 163.0], [19.8, 164.0], [19.9, 165.0], [20.0, 165.0], [20.1, 166.0], [20.2, 166.0], [20.3, 167.0], [20.4, 168.0], [20.5, 169.0], [20.6, 170.0], [20.7, 171.0], [20.8, 171.0], [20.9, 172.0], [21.0, 172.0], [21.1, 174.0], [21.2, 174.0], [21.3, 175.0], [21.4, 176.0], [21.5, 177.0], [21.6, 177.0], [21.7, 178.0], [21.8, 178.0], [21.9, 179.0], [22.0, 179.0], [22.1, 180.0], [22.2, 180.0], [22.3, 181.0], [22.4, 181.0], [22.5, 182.0], [22.6, 182.0], [22.7, 183.0], [22.8, 184.0], [22.9, 184.0], [23.0, 185.0], [23.1, 185.0], [23.2, 186.0], [23.3, 186.0], [23.4, 187.0], [23.5, 187.0], [23.6, 187.0], [23.7, 188.0], [23.8, 189.0], [23.9, 189.0], [24.0, 190.0], [24.1, 190.0], [24.2, 190.0], [24.3, 191.0], [24.4, 191.0], [24.5, 192.0], [24.6, 192.0], [24.7, 192.0], [24.8, 193.0], [24.9, 193.0], [25.0, 194.0], [25.1, 194.0], [25.2, 194.0], [25.3, 195.0], [25.4, 196.0], [25.5, 196.0], [25.6, 197.0], [25.7, 198.0], [25.8, 198.0], [25.9, 199.0], [26.0, 200.0], [26.1, 200.0], [26.2, 201.0], [26.3, 201.0], [26.4, 201.0], [26.5, 202.0], [26.6, 202.0], [26.7, 202.0], [26.8, 203.0], [26.9, 203.0], [27.0, 203.0], [27.1, 204.0], [27.2, 204.0], [27.3, 205.0], [27.4, 205.0], [27.5, 205.0], [27.6, 206.0], [27.7, 206.0], [27.8, 207.0], [27.9, 207.0], [28.0, 208.0], [28.1, 208.0], [28.2, 209.0], [28.3, 209.0], [28.4, 209.0], [28.5, 210.0], [28.6, 210.0], [28.7, 210.0], [28.8, 211.0], [28.9, 211.0], [29.0, 212.0], [29.1, 212.0], [29.2, 212.0], [29.3, 213.0], [29.4, 213.0], [29.5, 213.0], [29.6, 213.0], [29.7, 214.0], [29.8, 214.0], [29.9, 215.0], [30.0, 215.0], [30.1, 215.0], [30.2, 216.0], [30.3, 216.0], [30.4, 217.0], [30.5, 217.0], [30.6, 218.0], [30.7, 218.0], [30.8, 218.0], [30.9, 219.0], [31.0, 219.0], [31.1, 219.0], [31.2, 220.0], [31.3, 220.0], [31.4, 221.0], [31.5, 221.0], [31.6, 222.0], [31.7, 222.0], [31.8, 223.0], [31.9, 224.0], [32.0, 224.0], [32.1, 224.0], [32.2, 225.0], [32.3, 226.0], [32.4, 226.0], [32.5, 226.0], [32.6, 227.0], [32.7, 227.0], [32.8, 227.0], [32.9, 228.0], [33.0, 228.0], [33.1, 229.0], [33.2, 230.0], [33.3, 230.0], [33.4, 231.0], [33.5, 231.0], [33.6, 232.0], [33.7, 233.0], [33.8, 233.0], [33.9, 234.0], [34.0, 235.0], [34.1, 236.0], [34.2, 237.0], [34.3, 237.0], [34.4, 239.0], [34.5, 239.0], [34.6, 240.0], [34.7, 240.0], [34.8, 241.0], [34.9, 241.0], [35.0, 242.0], [35.1, 243.0], [35.2, 244.0], [35.3, 244.0], [35.4, 245.0], [35.5, 246.0], [35.6, 247.0], [35.7, 247.0], [35.8, 248.0], [35.9, 249.0], [36.0, 249.0], [36.1, 250.0], [36.2, 251.0], [36.3, 251.0], [36.4, 252.0], [36.5, 253.0], [36.6, 254.0], [36.7, 255.0], [36.8, 256.0], [36.9, 257.0], [37.0, 257.0], [37.1, 258.0], [37.2, 259.0], [37.3, 259.0], [37.4, 260.0], [37.5, 262.0], [37.6, 263.0], [37.7, 263.0], [37.8, 264.0], [37.9, 265.0], [38.0, 266.0], [38.1, 266.0], [38.2, 267.0], [38.3, 267.0], [38.4, 268.0], [38.5, 268.0], [38.6, 269.0], [38.7, 269.0], [38.8, 270.0], [38.9, 271.0], [39.0, 272.0], [39.1, 273.0], [39.2, 274.0], [39.3, 275.0], [39.4, 276.0], [39.5, 277.0], [39.6, 278.0], [39.7, 279.0], [39.8, 279.0], [39.9, 279.0], [40.0, 280.0], [40.1, 281.0], [40.2, 283.0], [40.3, 284.0], [40.4, 284.0], [40.5, 285.0], [40.6, 285.0], [40.7, 286.0], [40.8, 286.0], [40.9, 288.0], [41.0, 288.0], [41.1, 290.0], [41.2, 291.0], [41.3, 293.0], [41.4, 294.0], [41.5, 295.0], [41.6, 295.0], [41.7, 296.0], [41.8, 296.0], [41.9, 297.0], [42.0, 298.0], [42.1, 299.0], [42.2, 300.0], [42.3, 300.0], [42.4, 302.0], [42.5, 303.0], [42.6, 304.0], [42.7, 304.0], [42.8, 304.0], [42.9, 305.0], [43.0, 305.0], [43.1, 306.0], [43.2, 307.0], [43.3, 307.0], [43.4, 308.0], [43.5, 308.0], [43.6, 309.0], [43.7, 309.0], [43.8, 310.0], [43.9, 311.0], [44.0, 311.0], [44.1, 312.0], [44.2, 313.0], [44.3, 313.0], [44.4, 314.0], [44.5, 314.0], [44.6, 315.0], [44.7, 316.0], [44.8, 317.0], [44.9, 318.0], [45.0, 319.0], [45.1, 319.0], [45.2, 320.0], [45.3, 320.0], [45.4, 321.0], [45.5, 322.0], [45.6, 323.0], [45.7, 323.0], [45.8, 324.0], [45.9, 325.0], [46.0, 326.0], [46.1, 327.0], [46.2, 327.0], [46.3, 328.0], [46.4, 330.0], [46.5, 331.0], [46.6, 333.0], [46.7, 334.0], [46.8, 335.0], [46.9, 336.0], [47.0, 337.0], [47.1, 338.0], [47.2, 339.0], [47.3, 340.0], [47.4, 342.0], [47.5, 344.0], [47.6, 345.0], [47.7, 347.0], [47.8, 348.0], [47.9, 349.0], [48.0, 350.0], [48.1, 351.0], [48.2, 352.0], [48.3, 353.0], [48.4, 353.0], [48.5, 354.0], [48.6, 355.0], [48.7, 356.0], [48.8, 356.0], [48.9, 357.0], [49.0, 357.0], [49.1, 358.0], [49.2, 358.0], [49.3, 358.0], [49.4, 358.0], [49.5, 359.0], [49.6, 359.0], [49.7, 359.0], [49.8, 360.0], [49.9, 360.0], [50.0, 361.0], [50.1, 361.0], [50.2, 362.0], [50.3, 362.0], [50.4, 362.0], [50.5, 363.0], [50.6, 363.0], [50.7, 364.0], [50.8, 364.0], [50.9, 364.0], [51.0, 365.0], [51.1, 365.0], [51.2, 366.0], [51.3, 366.0], [51.4, 366.0], [51.5, 367.0], [51.6, 367.0], [51.7, 368.0], [51.8, 368.0], [51.9, 369.0], [52.0, 369.0], [52.1, 370.0], [52.2, 370.0], [52.3, 371.0], [52.4, 371.0], [52.5, 372.0], [52.6, 373.0], [52.7, 373.0], [52.8, 374.0], [52.9, 374.0], [53.0, 375.0], [53.1, 376.0], [53.2, 377.0], [53.3, 377.0], [53.4, 378.0], [53.5, 378.0], [53.6, 379.0], [53.7, 379.0], [53.8, 380.0], [53.9, 380.0], [54.0, 381.0], [54.1, 381.0], [54.2, 382.0], [54.3, 382.0], [54.4, 383.0], [54.5, 383.0], [54.6, 384.0], [54.7, 384.0], [54.8, 385.0], [54.9, 386.0], [55.0, 386.0], [55.1, 387.0], [55.2, 388.0], [55.3, 388.0], [55.4, 389.0], [55.5, 390.0], [55.6, 391.0], [55.7, 392.0], [55.8, 392.0], [55.9, 393.0], [56.0, 393.0], [56.1, 394.0], [56.2, 394.0], [56.3, 395.0], [56.4, 396.0], [56.5, 396.0], [56.6, 397.0], [56.7, 398.0], [56.8, 398.0], [56.9, 399.0], [57.0, 399.0], [57.1, 400.0], [57.2, 400.0], [57.3, 401.0], [57.4, 401.0], [57.5, 403.0], [57.6, 403.0], [57.7, 404.0], [57.8, 404.0], [57.9, 405.0], [58.0, 406.0], [58.1, 407.0], [58.2, 407.0], [58.3, 408.0], [58.4, 408.0], [58.5, 409.0], [58.6, 409.0], [58.7, 410.0], [58.8, 411.0], [58.9, 411.0], [59.0, 412.0], [59.1, 413.0], [59.2, 413.0], [59.3, 414.0], [59.4, 415.0], [59.5, 416.0], [59.6, 417.0], [59.7, 417.0], [59.8, 418.0], [59.9, 421.0], [60.0, 423.0], [60.1, 423.0], [60.2, 425.0], [60.3, 426.0], [60.4, 426.0], [60.5, 427.0], [60.6, 427.0], [60.7, 428.0], [60.8, 428.0], [60.9, 429.0], [61.0, 430.0], [61.1, 430.0], [61.2, 431.0], [61.3, 432.0], [61.4, 433.0], [61.5, 433.0], [61.6, 434.0], [61.7, 435.0], [61.8, 436.0], [61.9, 437.0], [62.0, 438.0], [62.1, 439.0], [62.2, 440.0], [62.3, 442.0], [62.4, 444.0], [62.5, 445.0], [62.6, 447.0], [62.7, 449.0], [62.8, 450.0], [62.9, 453.0], [63.0, 454.0], [63.1, 455.0], [63.2, 457.0], [63.3, 459.0], [63.4, 460.0], [63.5, 461.0], [63.6, 464.0], [63.7, 465.0], [63.8, 467.0], [63.9, 470.0], [64.0, 473.0], [64.1, 474.0], [64.2, 477.0], [64.3, 478.0], [64.4, 479.0], [64.5, 482.0], [64.6, 483.0], [64.7, 484.0], [64.8, 487.0], [64.9, 490.0], [65.0, 493.0], [65.1, 495.0], [65.2, 496.0], [65.3, 498.0], [65.4, 499.0], [65.5, 501.0], [65.6, 504.0], [65.7, 506.0], [65.8, 509.0], [65.9, 510.0], [66.0, 513.0], [66.1, 516.0], [66.2, 519.0], [66.3, 522.0], [66.4, 524.0], [66.5, 525.0], [66.6, 526.0], [66.7, 529.0], [66.8, 531.0], [66.9, 534.0], [67.0, 535.0], [67.1, 538.0], [67.2, 540.0], [67.3, 542.0], [67.4, 543.0], [67.5, 546.0], [67.6, 549.0], [67.7, 551.0], [67.8, 553.0], [67.9, 555.0], [68.0, 557.0], [68.1, 560.0], [68.2, 561.0], [68.3, 565.0], [68.4, 570.0], [68.5, 574.0], [68.6, 576.0], [68.7, 580.0], [68.8, 581.0], [68.9, 584.0], [69.0, 586.0], [69.1, 589.0], [69.2, 592.0], [69.3, 594.0], [69.4, 597.0], [69.5, 600.0], [69.6, 601.0], [69.7, 603.0], [69.8, 605.0], [69.9, 607.0], [70.0, 609.0], [70.1, 611.0], [70.2, 613.0], [70.3, 615.0], [70.4, 617.0], [70.5, 619.0], [70.6, 621.0], [70.7, 624.0], [70.8, 629.0], [70.9, 631.0], [71.0, 634.0], [71.1, 635.0], [71.2, 637.0], [71.3, 639.0], [71.4, 640.0], [71.5, 641.0], [71.6, 642.0], [71.7, 644.0], [71.8, 644.0], [71.9, 646.0], [72.0, 649.0], [72.1, 650.0], [72.2, 651.0], [72.3, 653.0], [72.4, 655.0], [72.5, 657.0], [72.6, 658.0], [72.7, 659.0], [72.8, 660.0], [72.9, 661.0], [73.0, 662.0], [73.1, 664.0], [73.2, 666.0], [73.3, 669.0], [73.4, 671.0], [73.5, 673.0], [73.6, 675.0], [73.7, 677.0], [73.8, 680.0], [73.9, 683.0], [74.0, 686.0], [74.1, 690.0], [74.2, 692.0], [74.3, 695.0], [74.4, 696.0], [74.5, 698.0], [74.6, 699.0], [74.7, 700.0], [74.8, 701.0], [74.9, 701.0], [75.0, 702.0], [75.1, 702.0], [75.2, 703.0], [75.3, 704.0], [75.4, 704.0], [75.5, 705.0], [75.6, 705.0], [75.7, 706.0], [75.8, 707.0], [75.9, 709.0], [76.0, 711.0], [76.1, 713.0], [76.2, 716.0], [76.3, 718.0], [76.4, 719.0], [76.5, 721.0], [76.6, 722.0], [76.7, 724.0], [76.8, 725.0], [76.9, 725.0], [77.0, 726.0], [77.1, 727.0], [77.2, 728.0], [77.3, 730.0], [77.4, 731.0], [77.5, 732.0], [77.6, 735.0], [77.7, 736.0], [77.8, 741.0], [77.9, 742.0], [78.0, 744.0], [78.1, 748.0], [78.2, 751.0], [78.3, 757.0], [78.4, 759.0], [78.5, 762.0], [78.6, 767.0], [78.7, 769.0], [78.8, 771.0], [78.9, 774.0], [79.0, 777.0], [79.1, 779.0], [79.2, 783.0], [79.3, 786.0], [79.4, 788.0], [79.5, 792.0], [79.6, 796.0], [79.7, 798.0], [79.8, 804.0], [79.9, 809.0], [80.0, 813.0], [80.1, 816.0], [80.2, 817.0], [80.3, 822.0], [80.4, 827.0], [80.5, 834.0], [80.6, 838.0], [80.7, 843.0], [80.8, 850.0], [80.9, 857.0], [81.0, 859.0], [81.1, 862.0], [81.2, 866.0], [81.3, 872.0], [81.4, 884.0], [81.5, 891.0], [81.6, 905.0], [81.7, 916.0], [81.8, 921.0], [81.9, 923.0], [82.0, 925.0], [82.1, 928.0], [82.2, 934.0], [82.3, 939.0], [82.4, 944.0], [82.5, 949.0], [82.6, 953.0], [82.7, 959.0], [82.8, 965.0], [82.9, 970.0], [83.0, 974.0], [83.1, 979.0], [83.2, 982.0], [83.3, 988.0], [83.4, 993.0], [83.5, 996.0], [83.6, 1005.0], [83.7, 1021.0], [83.8, 1030.0], [83.9, 1035.0], [84.0, 1037.0], [84.1, 1039.0], [84.2, 1048.0], [84.3, 1054.0], [84.4, 1066.0], [84.5, 1082.0], [84.6, 1091.0], [84.7, 1112.0], [84.8, 1116.0], [84.9, 1121.0], [85.0, 1131.0], [85.1, 1141.0], [85.2, 1147.0], [85.3, 1160.0], [85.4, 1169.0], [85.5, 1172.0], [85.6, 1193.0], [85.7, 1197.0], [85.8, 1200.0], [85.9, 1201.0], [86.0, 1202.0], [86.1, 1206.0], [86.2, 1220.0], [86.3, 1224.0], [86.4, 1230.0], [86.5, 1235.0], [86.6, 1239.0], [86.7, 1242.0], [86.8, 1247.0], [86.9, 1249.0], [87.0, 1256.0], [87.1, 1262.0], [87.2, 1265.0], [87.3, 1267.0], [87.4, 1269.0], [87.5, 1272.0], [87.6, 1275.0], [87.7, 1280.0], [87.8, 1283.0], [87.9, 1285.0], [88.0, 1292.0], [88.1, 1305.0], [88.2, 1309.0], [88.3, 1321.0], [88.4, 1329.0], [88.5, 1333.0], [88.6, 1338.0], [88.7, 1344.0], [88.8, 1349.0], [88.9, 1355.0], [89.0, 1362.0], [89.1, 1369.0], [89.2, 1375.0], [89.3, 1383.0], [89.4, 1395.0], [89.5, 1402.0], [89.6, 1410.0], [89.7, 1413.0], [89.8, 1417.0], [89.9, 1423.0], [90.0, 1431.0], [90.1, 1441.0], [90.2, 1447.0], [90.3, 1452.0], [90.4, 1458.0], [90.5, 1464.0], [90.6, 1468.0], [90.7, 1470.0], [90.8, 1475.0], [90.9, 1477.0], [91.0, 1482.0], [91.1, 1485.0], [91.2, 1489.0], [91.3, 1492.0], [91.4, 1495.0], [91.5, 1498.0], [91.6, 1501.0], [91.7, 1504.0], [91.8, 1508.0], [91.9, 1511.0], [92.0, 1513.0], [92.1, 1516.0], [92.2, 1519.0], [92.3, 1523.0], [92.4, 1532.0], [92.5, 1543.0], [92.6, 1553.0], [92.7, 1565.0], [92.8, 1569.0], [92.9, 1573.0], [93.0, 1577.0], [93.1, 1580.0], [93.2, 1583.0], [93.3, 1587.0], [93.4, 1590.0], [93.5, 1593.0], [93.6, 1595.0], [93.7, 1597.0], [93.8, 1600.0], [93.9, 1604.0], [94.0, 1608.0], [94.1, 1612.0], [94.2, 1616.0], [94.3, 1618.0], [94.4, 1620.0], [94.5, 1623.0], [94.6, 1633.0], [94.7, 1672.0], [94.8, 1685.0], [94.9, 1694.0], [95.0, 1701.0], [95.1, 1705.0], [95.2, 1712.0], [95.3, 1716.0], [95.4, 1722.0], [95.5, 1740.0], [95.6, 1802.0], [95.7, 1818.0], [95.8, 1823.0], [95.9, 1835.0], [96.0, 1842.0], [96.1, 1846.0], [96.2, 1852.0], [96.3, 1855.0], [96.4, 1863.0], [96.5, 1869.0], [96.6, 1875.0], [96.7, 1879.0], [96.8, 1883.0], [96.9, 1888.0], [97.0, 1895.0], [97.1, 1900.0], [97.2, 1905.0], [97.3, 1911.0], [97.4, 1923.0], [97.5, 1928.0], [97.6, 1936.0], [97.7, 1946.0], [97.8, 1982.0], [97.9, 2003.0], [98.0, 2587.0], [98.1, 2608.0], [98.2, 2629.0], [98.3, 2646.0], [98.4, 2655.0], [98.5, 2658.0], [98.6, 2660.0], [98.7, 2664.0], [98.8, 2671.0], [98.9, 2680.0], [99.0, 2703.0], [99.1, 2788.0], [99.2, 2865.0], [99.3, 2876.0], [99.4, 2932.0], [99.5, 2943.0], [99.6, 2957.0], [99.7, 2992.0], [99.8, 3022.0], [99.9, 3036.0], [100.0, 3048.0]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 2.0], [6.7, 2.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 5.0], [7.6, 5.0], [7.7, 5.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 6.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 8.0], [8.6, 8.0], [8.7, 8.0], [8.8, 8.0], [8.9, 9.0], [9.0, 9.0], [9.1, 9.0], [9.2, 9.0], [9.3, 10.0], [9.4, 10.0], [9.5, 10.0], [9.6, 10.0], [9.7, 10.0], [9.8, 11.0], [9.9, 11.0], [10.0, 11.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 13.0], [10.6, 13.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 15.0], [11.1, 15.0], [11.2, 15.0], [11.3, 16.0], [11.4, 16.0], [11.5, 16.0], [11.6, 16.0], [11.7, 17.0], [11.8, 17.0], [11.9, 18.0], [12.0, 18.0], [12.1, 19.0], [12.2, 19.0], [12.3, 19.0], [12.4, 20.0], [12.5, 20.0], [12.6, 20.0], [12.7, 21.0], [12.8, 21.0], [12.9, 22.0], [13.0, 22.0], [13.1, 22.0], [13.2, 22.0], [13.3, 23.0], [13.4, 23.0], [13.5, 24.0], [13.6, 24.0], [13.7, 24.0], [13.8, 24.0], [13.9, 25.0], [14.0, 25.0], [14.1, 25.0], [14.2, 25.0], [14.3, 26.0], [14.4, 26.0], [14.5, 26.0], [14.6, 27.0], [14.7, 27.0], [14.8, 28.0], [14.9, 28.0], [15.0, 29.0], [15.1, 29.0], [15.2, 30.0], [15.3, 30.0], [15.4, 30.0], [15.5, 30.0], [15.6, 31.0], [15.7, 31.0], [15.8, 32.0], [15.9, 32.0], [16.0, 33.0], [16.1, 33.0], [16.2, 34.0], [16.3, 35.0], [16.4, 35.0], [16.5, 36.0], [16.6, 36.0], [16.7, 37.0], [16.8, 37.0], [16.9, 37.0], [17.0, 37.0], [17.1, 38.0], [17.2, 38.0], [17.3, 38.0], [17.4, 39.0], [17.5, 39.0], [17.6, 39.0], [17.7, 40.0], [17.8, 41.0], [17.9, 41.0], [18.0, 42.0], [18.1, 42.0], [18.2, 43.0], [18.3, 43.0], [18.4, 44.0], [18.5, 44.0], [18.6, 44.0], [18.7, 45.0], [18.8, 45.0], [18.9, 46.0], [19.0, 47.0], [19.1, 47.0], [19.2, 48.0], [19.3, 48.0], [19.4, 49.0], [19.5, 49.0], [19.6, 50.0], [19.7, 50.0], [19.8, 50.0], [19.9, 51.0], [20.0, 51.0], [20.1, 52.0], [20.2, 52.0], [20.3, 52.0], [20.4, 53.0], [20.5, 53.0], [20.6, 54.0], [20.7, 54.0], [20.8, 55.0], [20.9, 55.0], [21.0, 55.0], [21.1, 56.0], [21.2, 56.0], [21.3, 56.0], [21.4, 56.0], [21.5, 56.0], [21.6, 57.0], [21.7, 57.0], [21.8, 58.0], [21.9, 58.0], [22.0, 59.0], [22.1, 60.0], [22.2, 60.0], [22.3, 61.0], [22.4, 61.0], [22.5, 62.0], [22.6, 62.0], [22.7, 62.0], [22.8, 62.0], [22.9, 63.0], [23.0, 63.0], [23.1, 63.0], [23.2, 63.0], [23.3, 63.0], [23.4, 64.0], [23.5, 64.0], [23.6, 64.0], [23.7, 65.0], [23.8, 65.0], [23.9, 65.0], [24.0, 65.0], [24.1, 66.0], [24.2, 66.0], [24.3, 67.0], [24.4, 67.0], [24.5, 67.0], [24.6, 68.0], [24.7, 68.0], [24.8, 68.0], [24.9, 69.0], [25.0, 69.0], [25.1, 69.0], [25.2, 70.0], [25.3, 70.0], [25.4, 70.0], [25.5, 71.0], [25.6, 72.0], [25.7, 72.0], [25.8, 73.0], [25.9, 73.0], [26.0, 75.0], [26.1, 76.0], [26.2, 76.0], [26.3, 77.0], [26.4, 77.0], [26.5, 78.0], [26.6, 78.0], [26.7, 79.0], [26.8, 80.0], [26.9, 80.0], [27.0, 80.0], [27.1, 81.0], [27.2, 81.0], [27.3, 82.0], [27.4, 82.0], [27.5, 83.0], [27.6, 83.0], [27.7, 84.0], [27.8, 84.0], [27.9, 85.0], [28.0, 85.0], [28.1, 86.0], [28.2, 86.0], [28.3, 87.0], [28.4, 87.0], [28.5, 88.0], [28.6, 88.0], [28.7, 89.0], [28.8, 89.0], [28.9, 90.0], [29.0, 90.0], [29.1, 90.0], [29.2, 91.0], [29.3, 92.0], [29.4, 92.0], [29.5, 93.0], [29.6, 94.0], [29.7, 94.0], [29.8, 94.0], [29.9, 95.0], [30.0, 95.0], [30.1, 96.0], [30.2, 97.0], [30.3, 97.0], [30.4, 98.0], [30.5, 98.0], [30.6, 99.0], [30.7, 100.0], [30.8, 101.0], [30.9, 102.0], [31.0, 102.0], [31.1, 102.0], [31.2, 103.0], [31.3, 103.0], [31.4, 103.0], [31.5, 104.0], [31.6, 104.0], [31.7, 105.0], [31.8, 105.0], [31.9, 105.0], [32.0, 106.0], [32.1, 107.0], [32.2, 107.0], [32.3, 108.0], [32.4, 108.0], [32.5, 108.0], [32.6, 109.0], [32.7, 109.0], [32.8, 110.0], [32.9, 110.0], [33.0, 110.0], [33.1, 111.0], [33.2, 111.0], [33.3, 112.0], [33.4, 113.0], [33.5, 113.0], [33.6, 114.0], [33.7, 115.0], [33.8, 116.0], [33.9, 117.0], [34.0, 117.0], [34.1, 118.0], [34.2, 118.0], [34.3, 119.0], [34.4, 119.0], [34.5, 120.0], [34.6, 121.0], [34.7, 122.0], [34.8, 122.0], [34.9, 123.0], [35.0, 124.0], [35.1, 125.0], [35.2, 125.0], [35.3, 126.0], [35.4, 126.0], [35.5, 126.0], [35.6, 127.0], [35.7, 128.0], [35.8, 129.0], [35.9, 130.0], [36.0, 131.0], [36.1, 131.0], [36.2, 132.0], [36.3, 132.0], [36.4, 133.0], [36.5, 134.0], [36.6, 135.0], [36.7, 135.0], [36.8, 137.0], [36.9, 137.0], [37.0, 138.0], [37.1, 139.0], [37.2, 140.0], [37.3, 142.0], [37.4, 143.0], [37.5, 144.0], [37.6, 146.0], [37.7, 148.0], [37.8, 149.0], [37.9, 150.0], [38.0, 151.0], [38.1, 153.0], [38.2, 154.0], [38.3, 156.0], [38.4, 158.0], [38.5, 159.0], [38.6, 161.0], [38.7, 162.0], [38.8, 164.0], [38.9, 165.0], [39.0, 166.0], [39.1, 166.0], [39.2, 167.0], [39.3, 169.0], [39.4, 169.0], [39.5, 171.0], [39.6, 173.0], [39.7, 175.0], [39.8, 175.0], [39.9, 176.0], [40.0, 177.0], [40.1, 178.0], [40.2, 179.0], [40.3, 180.0], [40.4, 181.0], [40.5, 181.0], [40.6, 182.0], [40.7, 183.0], [40.8, 184.0], [40.9, 185.0], [41.0, 185.0], [41.1, 186.0], [41.2, 186.0], [41.3, 187.0], [41.4, 187.0], [41.5, 188.0], [41.6, 188.0], [41.7, 189.0], [41.8, 189.0], [41.9, 190.0], [42.0, 191.0], [42.1, 191.0], [42.2, 192.0], [42.3, 192.0], [42.4, 193.0], [42.5, 194.0], [42.6, 194.0], [42.7, 195.0], [42.8, 195.0], [42.9, 196.0], [43.0, 196.0], [43.1, 196.0], [43.2, 197.0], [43.3, 197.0], [43.4, 198.0], [43.5, 199.0], [43.6, 200.0], [43.7, 200.0], [43.8, 201.0], [43.9, 202.0], [44.0, 202.0], [44.1, 203.0], [44.2, 204.0], [44.3, 205.0], [44.4, 206.0], [44.5, 206.0], [44.6, 207.0], [44.7, 207.0], [44.8, 208.0], [44.9, 208.0], [45.0, 209.0], [45.1, 210.0], [45.2, 210.0], [45.3, 210.0], [45.4, 211.0], [45.5, 213.0], [45.6, 213.0], [45.7, 214.0], [45.8, 215.0], [45.9, 215.0], [46.0, 216.0], [46.1, 216.0], [46.2, 217.0], [46.3, 217.0], [46.4, 218.0], [46.5, 218.0], [46.6, 220.0], [46.7, 221.0], [46.8, 222.0], [46.9, 223.0], [47.0, 224.0], [47.1, 224.0], [47.2, 224.0], [47.3, 225.0], [47.4, 225.0], [47.5, 226.0], [47.6, 226.0], [47.7, 227.0], [47.8, 227.0], [47.9, 228.0], [48.0, 228.0], [48.1, 229.0], [48.2, 229.0], [48.3, 230.0], [48.4, 230.0], [48.5, 231.0], [48.6, 231.0], [48.7, 232.0], [48.8, 232.0], [48.9, 232.0], [49.0, 233.0], [49.1, 233.0], [49.2, 233.0], [49.3, 233.0], [49.4, 234.0], [49.5, 234.0], [49.6, 234.0], [49.7, 235.0], [49.8, 235.0], [49.9, 235.0], [50.0, 236.0], [50.1, 236.0], [50.2, 237.0], [50.3, 237.0], [50.4, 238.0], [50.5, 238.0], [50.6, 238.0], [50.7, 239.0], [50.8, 239.0], [50.9, 240.0], [51.0, 241.0], [51.1, 241.0], [51.2, 242.0], [51.3, 243.0], [51.4, 243.0], [51.5, 243.0], [51.6, 244.0], [51.7, 244.0], [51.8, 245.0], [51.9, 246.0], [52.0, 246.0], [52.1, 247.0], [52.2, 248.0], [52.3, 248.0], [52.4, 249.0], [52.5, 249.0], [52.6, 249.0], [52.7, 250.0], [52.8, 251.0], [52.9, 252.0], [53.0, 252.0], [53.1, 252.0], [53.2, 253.0], [53.3, 254.0], [53.4, 254.0], [53.5, 255.0], [53.6, 255.0], [53.7, 255.0], [53.8, 256.0], [53.9, 257.0], [54.0, 258.0], [54.1, 259.0], [54.2, 260.0], [54.3, 261.0], [54.4, 262.0], [54.5, 263.0], [54.6, 265.0], [54.7, 266.0], [54.8, 268.0], [54.9, 269.0], [55.0, 270.0], [55.1, 271.0], [55.2, 272.0], [55.3, 273.0], [55.4, 274.0], [55.5, 274.0], [55.6, 275.0], [55.7, 276.0], [55.8, 276.0], [55.9, 277.0], [56.0, 278.0], [56.1, 278.0], [56.2, 278.0], [56.3, 279.0], [56.4, 280.0], [56.5, 280.0], [56.6, 281.0], [56.7, 281.0], [56.8, 282.0], [56.9, 283.0], [57.0, 285.0], [57.1, 285.0], [57.2, 286.0], [57.3, 286.0], [57.4, 286.0], [57.5, 287.0], [57.6, 288.0], [57.7, 288.0], [57.8, 289.0], [57.9, 289.0], [58.0, 290.0], [58.1, 291.0], [58.2, 292.0], [58.3, 292.0], [58.4, 293.0], [58.5, 293.0], [58.6, 294.0], [58.7, 294.0], [58.8, 294.0], [58.9, 295.0], [59.0, 295.0], [59.1, 296.0], [59.2, 297.0], [59.3, 298.0], [59.4, 298.0], [59.5, 299.0], [59.6, 299.0], [59.7, 300.0], [59.8, 301.0], [59.9, 301.0], [60.0, 302.0], [60.1, 302.0], [60.2, 303.0], [60.3, 303.0], [60.4, 303.0], [60.5, 304.0], [60.6, 304.0], [60.7, 304.0], [60.8, 304.0], [60.9, 305.0], [61.0, 305.0], [61.1, 305.0], [61.2, 306.0], [61.3, 306.0], [61.4, 306.0], [61.5, 307.0], [61.6, 307.0], [61.7, 308.0], [61.8, 308.0], [61.9, 309.0], [62.0, 309.0], [62.1, 310.0], [62.2, 310.0], [62.3, 310.0], [62.4, 310.0], [62.5, 311.0], [62.6, 311.0], [62.7, 311.0], [62.8, 312.0], [62.9, 312.0], [63.0, 312.0], [63.1, 313.0], [63.2, 313.0], [63.3, 314.0], [63.4, 314.0], [63.5, 315.0], [63.6, 315.0], [63.7, 315.0], [63.8, 316.0], [63.9, 316.0], [64.0, 317.0], [64.1, 317.0], [64.2, 318.0], [64.3, 318.0], [64.4, 319.0], [64.5, 319.0], [64.6, 320.0], [64.7, 320.0], [64.8, 320.0], [64.9, 321.0], [65.0, 321.0], [65.1, 322.0], [65.2, 322.0], [65.3, 323.0], [65.4, 323.0], [65.5, 323.0], [65.6, 324.0], [65.7, 325.0], [65.8, 325.0], [65.9, 325.0], [66.0, 326.0], [66.1, 327.0], [66.2, 327.0], [66.3, 328.0], [66.4, 329.0], [66.5, 330.0], [66.6, 330.0], [66.7, 331.0], [66.8, 332.0], [66.9, 332.0], [67.0, 332.0], [67.1, 333.0], [67.2, 333.0], [67.3, 334.0], [67.4, 334.0], [67.5, 335.0], [67.6, 335.0], [67.7, 336.0], [67.8, 336.0], [67.9, 337.0], [68.0, 338.0], [68.1, 338.0], [68.2, 338.0], [68.3, 339.0], [68.4, 339.0], [68.5, 340.0], [68.6, 341.0], [68.7, 341.0], [68.8, 342.0], [68.9, 342.0], [69.0, 343.0], [69.1, 343.0], [69.2, 344.0], [69.3, 345.0], [69.4, 346.0], [69.5, 347.0], [69.6, 348.0], [69.7, 349.0], [69.8, 350.0], [69.9, 350.0], [70.0, 351.0], [70.1, 351.0], [70.2, 352.0], [70.3, 352.0], [70.4, 352.0], [70.5, 353.0], [70.6, 354.0], [70.7, 354.0], [70.8, 355.0], [70.9, 358.0], [71.0, 359.0], [71.1, 361.0], [71.2, 362.0], [71.3, 363.0], [71.4, 363.0], [71.5, 364.0], [71.6, 365.0], [71.7, 366.0], [71.8, 367.0], [71.9, 368.0], [72.0, 368.0], [72.1, 369.0], [72.2, 370.0], [72.3, 371.0], [72.4, 372.0], [72.5, 373.0], [72.6, 373.0], [72.7, 375.0], [72.8, 375.0], [72.9, 376.0], [73.0, 377.0], [73.1, 378.0], [73.2, 378.0], [73.3, 379.0], [73.4, 381.0], [73.5, 383.0], [73.6, 384.0], [73.7, 386.0], [73.8, 389.0], [73.9, 390.0], [74.0, 391.0], [74.1, 391.0], [74.2, 392.0], [74.3, 394.0], [74.4, 395.0], [74.5, 397.0], [74.6, 400.0], [74.7, 401.0], [74.8, 402.0], [74.9, 402.0], [75.0, 404.0], [75.1, 405.0], [75.2, 406.0], [75.3, 407.0], [75.4, 409.0], [75.5, 410.0], [75.6, 411.0], [75.7, 411.0], [75.8, 412.0], [75.9, 412.0], [76.0, 413.0], [76.1, 414.0], [76.2, 415.0], [76.3, 416.0], [76.4, 418.0], [76.5, 422.0], [76.6, 424.0], [76.7, 428.0], [76.8, 432.0], [76.9, 435.0], [77.0, 439.0], [77.1, 441.0], [77.2, 444.0], [77.3, 445.0], [77.4, 446.0], [77.5, 447.0], [77.6, 449.0], [77.7, 451.0], [77.8, 452.0], [77.9, 454.0], [78.0, 457.0], [78.1, 462.0], [78.2, 464.0], [78.3, 466.0], [78.4, 467.0], [78.5, 468.0], [78.6, 470.0], [78.7, 473.0], [78.8, 474.0], [78.9, 476.0], [79.0, 480.0], [79.1, 482.0], [79.2, 483.0], [79.3, 486.0], [79.4, 488.0], [79.5, 491.0], [79.6, 492.0], [79.7, 494.0], [79.8, 498.0], [79.9, 499.0], [80.0, 501.0], [80.1, 502.0], [80.2, 502.0], [80.3, 503.0], [80.4, 504.0], [80.5, 505.0], [80.6, 506.0], [80.7, 507.0], [80.8, 508.0], [80.9, 509.0], [81.0, 511.0], [81.1, 512.0], [81.2, 512.0], [81.3, 513.0], [81.4, 513.0], [81.5, 514.0], [81.6, 514.0], [81.7, 515.0], [81.8, 516.0], [81.9, 517.0], [82.0, 518.0], [82.1, 519.0], [82.2, 520.0], [82.3, 522.0], [82.4, 523.0], [82.5, 524.0], [82.6, 527.0], [82.7, 527.0], [82.8, 529.0], [82.9, 530.0], [83.0, 533.0], [83.1, 534.0], [83.2, 535.0], [83.3, 535.0], [83.4, 536.0], [83.5, 536.0], [83.6, 537.0], [83.7, 537.0], [83.8, 539.0], [83.9, 541.0], [84.0, 543.0], [84.1, 545.0], [84.2, 547.0], [84.3, 549.0], [84.4, 550.0], [84.5, 551.0], [84.6, 552.0], [84.7, 553.0], [84.8, 555.0], [84.9, 556.0], [85.0, 558.0], [85.1, 559.0], [85.2, 562.0], [85.3, 563.0], [85.4, 565.0], [85.5, 567.0], [85.6, 569.0], [85.7, 570.0], [85.8, 571.0], [85.9, 573.0], [86.0, 574.0], [86.1, 576.0], [86.2, 579.0], [86.3, 581.0], [86.4, 585.0], [86.5, 588.0], [86.6, 592.0], [86.7, 597.0], [86.8, 600.0], [86.9, 603.0], [87.0, 607.0], [87.1, 608.0], [87.2, 610.0], [87.3, 613.0], [87.4, 619.0], [87.5, 621.0], [87.6, 622.0], [87.7, 624.0], [87.8, 625.0], [87.9, 626.0], [88.0, 626.0], [88.1, 627.0], [88.2, 627.0], [88.3, 628.0], [88.4, 628.0], [88.5, 629.0], [88.6, 630.0], [88.7, 631.0], [88.8, 632.0], [88.9, 634.0], [89.0, 635.0], [89.1, 638.0], [89.2, 642.0], [89.3, 644.0], [89.4, 650.0], [89.5, 654.0], [89.6, 658.0], [89.7, 663.0], [89.8, 672.0], [89.9, 678.0], [90.0, 682.0], [90.1, 683.0], [90.2, 688.0], [90.3, 690.0], [90.4, 692.0], [90.5, 693.0], [90.6, 695.0], [90.7, 696.0], [90.8, 696.0], [90.9, 698.0], [91.0, 700.0], [91.1, 702.0], [91.2, 704.0], [91.3, 705.0], [91.4, 707.0], [91.5, 708.0], [91.6, 710.0], [91.7, 711.0], [91.8, 713.0], [91.9, 714.0], [92.0, 714.0], [92.1, 715.0], [92.2, 716.0], [92.3, 716.0], [92.4, 717.0], [92.5, 718.0], [92.6, 721.0], [92.7, 722.0], [92.8, 724.0], [92.9, 725.0], [93.0, 728.0], [93.1, 729.0], [93.2, 735.0], [93.3, 736.0], [93.4, 737.0], [93.5, 740.0], [93.6, 752.0], [93.7, 763.0], [93.8, 770.0], [93.9, 778.0], [94.0, 782.0], [94.1, 798.0], [94.2, 808.0], [94.3, 815.0], [94.4, 831.0], [94.5, 910.0], [94.6, 929.0], [94.7, 933.0], [94.8, 936.0], [94.9, 966.0], [95.0, 1035.0], [95.1, 1074.0], [95.2, 1096.0], [95.3, 1111.0], [95.4, 1120.0], [95.5, 1126.0], [95.6, 1138.0], [95.7, 1143.0], [95.8, 1145.0], [95.9, 1146.0], [96.0, 1152.0], [96.1, 1192.0], [96.2, 1206.0], [96.3, 1226.0], [96.4, 1262.0], [96.5, 1283.0], [96.6, 1293.0], [96.7, 1295.0], [96.8, 1297.0], [96.9, 1299.0], [97.0, 1303.0], [97.1, 1319.0], [97.2, 1321.0], [97.3, 1326.0], [97.4, 1338.0], [97.5, 1344.0], [97.6, 1349.0], [97.7, 1351.0], [97.8, 1356.0], [97.9, 1364.0], [98.0, 1450.0], [98.1, 1475.0], [98.2, 1480.0], [98.3, 1589.0], [98.4, 1645.0], [98.5, 1660.0], [98.6, 1675.0], [98.7, 1834.0], [98.8, 1844.0], [98.9, 1850.0], [99.0, 1857.0], [99.1, 1880.0], [99.2, 1937.0], [99.3, 1944.0], [99.4, 1957.0], [99.5, 1983.0], [99.6, 2264.0], [99.7, 2280.0], [99.8, 2285.0], [99.9, 2290.0], [100.0, 2305.0]], "isOverall": false, "label": "Read User", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3063.0, "series": [{"data": [[0.0, 1171.0], [600.0, 520.0], [700.0, 506.0], [800.0, 183.0], [900.0, 196.0], [1000.0, 112.0], [1100.0, 113.0], [1200.0, 230.0], [1300.0, 138.0], [1400.0, 206.0], [1500.0, 225.0], [100.0, 1427.0], [1600.0, 122.0], [1700.0, 59.0], [1800.0, 149.0], [1900.0, 79.0], [2000.0, 10.0], [2300.0, 1.0], [2500.0, 6.0], [2600.0, 94.0], [2700.0, 14.0], [2800.0, 26.0], [2900.0, 34.0], [3000.0, 29.0], [200.0, 1618.0], [300.0, 1494.0], [400.0, 832.0], [500.0, 406.0]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[0.0, 3063.0], [2200.0, 39.0], [2300.0, 2.0], [600.0, 419.0], [700.0, 316.0], [200.0, 1608.0], [800.0, 35.0], [900.0, 48.0], [1000.0, 25.0], [1100.0, 92.0], [300.0, 1499.0], [1200.0, 80.0], [1300.0, 101.0], [1400.0, 29.0], [1500.0, 12.0], [100.0, 1289.0], [400.0, 531.0], [1600.0, 27.0], [1800.0, 49.0], [1900.0, 44.0], [500.0, 688.0], [2000.0, 4.0]], "isOverall": false, "label": "Read User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1000.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 9858.0, "series": [{"data": [[0.0, 9858.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4069.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 5073.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 293.1873589164788, "minX": 1.73335758E12, "maxY": 795.4967157819995, "series": [{"data": [[1.73335758E12, 293.1873589164788], [1.73335764E12, 795.4967157819995]], "isOverall": false, "label": "Test Distributed Messenger", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73335764E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 2.0, "maxY": 2700.269230769231, "series": [{"data": [[4.0, 7.0], [5.0, 6.0], [6.0, 6.2], [7.0, 4.5], [8.0, 8.25], [9.0, 8.25], [10.0, 9.0], [11.0, 6.0], [12.0, 11.0], [13.0, 4.0], [14.0, 2.0], [15.0, 12.166666666666668], [16.0, 12.2], [17.0, 20.0], [18.0, 9.0], [19.0, 10.0], [20.0, 11.333333333333334], [21.0, 471.6], [22.0, 12.0], [23.0, 8.933333333333335], [24.0, 291.125], [25.0, 572.0], [26.0, 576.5], [28.0, 823.7142857142857], [29.0, 576.0], [30.0, 1142.0], [31.0, 1141.0], [35.0, 1136.0], [40.0, 11.785714285714286], [43.0, 14.0], [47.0, 711.3333333333334], [48.0, 40.4], [50.0, 37.0], [53.0, 58.0], [52.0, 41.333333333333336], [55.0, 54.62499999999999], [54.0, 53.27272727272727], [56.0, 73.27083333333336], [57.0, 58.75], [59.0, 269.25], [58.0, 325.0], [63.0, 16.5], [62.0, 57.0], [64.0, 291.3], [65.0, 73.66666666666667], [66.0, 103.0], [67.0, 315.0], [74.0, 795.0], [81.0, 46.333333333333336], [82.0, 35.86885245901639], [83.0, 50.925925925925924], [80.0, 43.0], [85.0, 29.0], [87.0, 792.0], [94.0, 80.0], [92.0, 786.0], [98.0, 787.0], [97.0, 785.0], [96.0, 786.0], [103.0, 777.0], [102.0, 781.3333333333334], [107.0, 790.0], [106.0, 779.0], [105.0, 786.5], [111.0, 775.0], [109.0, 784.8888888888889], [108.0, 779.0], [115.0, 768.0], [114.0, 767.0], [113.0, 1080.5], [112.0, 774.5], [118.0, 770.0], [123.0, 762.5], [122.0, 1072.5], [121.0, 759.3333333333334], [120.0, 764.0], [126.0, 808.0], [125.0, 1131.722222222222], [124.0, 1050.8], [135.0, 783.0], [134.0, 787.0], [133.0, 799.3333333333334], [131.0, 803.0], [130.0, 814.0], [138.0, 778.0], [190.0, 707.0], [199.0, 35.0], [195.0, 698.0], [204.0, 498.0], [207.0, 668.5], [206.0, 702.0], [202.0, 712.4], [200.0, 658.0], [215.0, 600.1666666666666], [214.0, 705.9090909090909], [213.0, 703.0], [212.0, 698.0], [211.0, 668.0], [210.0, 703.0], [221.0, 682.3846153846154], [220.0, 513.3333333333334], [222.0, 746.6666666666666], [218.0, 718.0], [217.0, 707.0], [216.0, 711.0], [231.0, 58.9375], [224.0, 717.0], [239.0, 139.5], [238.0, 252.0], [232.0, 428.5], [234.0, 772.0], [246.0, 170.0], [245.0, 206.125], [244.0, 243.76190476190476], [242.0, 539.3636363636364], [240.0, 214.25], [247.0, 438.53333333333336], [241.0, 182.8518518518519], [243.0, 712.0], [253.0, 165.0], [252.0, 161.0], [250.0, 208.5], [249.0, 596.5], [255.0, 202.18181818181816], [254.0, 206.75], [248.0, 803.5], [264.0, 183.0], [266.0, 163.0], [263.0, 179.5], [261.0, 187.5], [259.0, 404.66666666666663], [258.0, 760.0], [257.0, 182.5], [265.0, 201.25], [262.0, 200.4], [286.0, 222.0], [287.0, 235.0], [285.0, 221.125], [284.0, 226.5], [283.0, 217.18181818181816], [282.0, 216.8], [281.0, 249.66666666666666], [280.0, 252.0], [279.0, 237.4], [275.0, 253.0], [278.0, 140.0], [277.0, 227.0], [276.0, 120.0], [302.0, 208.0], [298.0, 206.625], [297.0, 178.2], [303.0, 206.5], [301.0, 209.5], [300.0, 209.0], [296.0, 212.25], [293.0, 219.0], [288.0, 219.0], [289.0, 233.04878048780486], [291.0, 232.33333333333334], [290.0, 239.83333333333331], [292.0, 221.0], [324.0, 89.75], [323.0, 77.66666666666666], [325.0, 90.88235294117648], [322.0, 105.77777777777777], [321.0, 60.5], [338.0, 125.33333333333333], [337.0, 126.12500000000001], [339.0, 127.28571428571429], [340.0, 138.45833333333334], [341.0, 148.0], [342.0, 149.0], [343.0, 135.5], [344.0, 173.84615384615384], [351.0, 150.39130434782606], [350.0, 152.5], [349.0, 152.5], [348.0, 157.0], [345.0, 154.0], [346.0, 145.57142857142858], [347.0, 153.0], [366.0, 138.5], [365.0, 119.51515151515154], [363.0, 238.0], [361.0, 90.6530612244898], [360.0, 151.66666666666666], [367.0, 419.0], [364.0, 126.25599999999999], [362.0, 194.72727272727272], [357.0, 7.5], [359.0, 66.0], [358.0, 6.0], [371.0, 86.83333333333334], [381.0, 647.0], [380.0, 131.0], [370.0, 61.17647058823529], [369.0, 108.75], [368.0, 413.6666666666667], [379.0, 137.25], [377.0, 55.23529411764705], [375.0, 127.0], [374.0, 246.2], [376.0, 222.5], [373.0, 325.1666666666667], [372.0, 419.8333333333333], [398.0, 206.66666666666666], [399.0, 45.0], [396.0, 877.5], [392.0, 131.0], [391.0, 263.66666666666663], [384.0, 140.0], [395.0, 111.0], [388.0, 19.666666666666668], [385.0, 1623.0], [412.0, 102.06896551724137], [408.0, 372.875], [400.0, 787.2162162162163], [406.0, 1000.0], [407.0, 391.0], [402.0, 1252.0000000000002], [401.0, 1275.357142857143], [403.0, 647.0], [409.0, 164.0], [410.0, 119.18181818181819], [411.0, 442.1666666666667], [413.0, 805.4], [415.0, 94.47058823529412], [414.0, 20.5], [405.0, 355.0769230769231], [404.0, 189.6], [419.0, 294.6], [427.0, 39.0], [430.0, 528.0], [429.0, 356.0], [428.0, 683.0], [425.0, 564.75], [426.0, 662.0], [423.0, 383.0], [420.0, 373.0], [418.0, 468.6666666666667], [417.0, 496.8], [416.0, 814.2222222222223], [445.0, 365.0], [444.0, 155.5], [446.0, 566.0], [443.0, 381.75], [441.0, 343.0], [438.0, 362.0], [437.0, 431.6666666666667], [434.0, 357.3333333333333], [433.0, 362.42857142857144], [462.0, 345.25], [463.0, 436.5], [461.0, 135.5], [460.0, 77.0], [459.0, 104.5], [458.0, 119.5], [457.0, 890.6666666666667], [456.0, 571.3333333333334], [455.0, 385.57142857142856], [449.0, 448.75], [448.0, 560.8750000000001], [454.0, 225.16666666666666], [452.0, 357.0], [453.0, 1193.5], [476.0, 150.0], [475.0, 616.6666666666666], [473.0, 98.5], [472.0, 166.0], [470.0, 78.0], [471.0, 751.0], [464.0, 251.5], [465.0, 1019.5], [469.0, 174.0], [468.0, 157.0], [467.0, 412.5], [466.0, 140.25], [482.0, 1096.1666666666667], [486.0, 1110.5625], [484.0, 706.6], [494.0, 582.3076923076923], [490.0, 664.4], [491.0, 1680.0], [495.0, 288.61290322580646], [488.0, 1137.4], [492.0, 285.5], [493.0, 1680.0], [487.0, 1166.75], [481.0, 1221.5], [483.0, 1294.0], [497.0, 347.85714285714283], [509.0, 235.57142857142856], [502.0, 44.33333333333333], [511.0, 57.25], [504.0, 1224.5], [510.0, 727.0], [506.0, 410.0], [507.0, 465.5], [505.0, 81.33333333333333], [501.0, 404.25000000000006], [500.0, 865.0], [496.0, 230.9047619047619], [503.0, 1046.0], [498.0, 321.6666666666667], [499.0, 341.0], [508.0, 722.2], [518.0, 980.4285714285714], [529.0, 339.0333333333333], [533.0, 707.8181818181818], [534.0, 1308.0], [531.0, 800.5], [532.0, 176.5], [530.0, 142.5], [528.0, 215.91666666666669], [526.0, 648.1111111111111], [527.0, 846.375], [512.0, 854.0], [514.0, 88.0], [515.0, 729.5], [513.0, 279.5], [524.0, 173.71428571428572], [523.0, 84.0], [522.0, 573.2], [520.0, 708.5], [519.0, 701.5], [538.0, 1043.0], [537.0, 703.4], [539.0, 701.5714285714286], [536.0, 551.75], [542.0, 1046.25], [541.0, 697.0], [543.0, 1198.25], [540.0, 441.0], [517.0, 662.2307692307692], [516.0, 775.6], [572.0, 1166.0], [575.0, 70.75], [562.0, 217.0], [560.0, 1264.3333333333333], [566.0, 313.3333333333333], [565.0, 313.0], [564.0, 315.0], [567.0, 459.5], [563.0, 535.5], [574.0, 34.214285714285715], [568.0, 16.0], [549.0, 1123.0], [550.0, 696.0], [551.0, 1289.0], [569.0, 261.42857142857144], [570.0, 213.0], [546.0, 220.0], [545.0, 1310.6], [547.0, 1314.0], [548.0, 594.6666666666667], [573.0, 213.5], [553.0, 857.3333333333334], [552.0, 572.25], [554.0, 308.46153846153845], [555.0, 899.1111111111111], [557.0, 605.4], [556.0, 1025.5000000000002], [559.0, 933.8], [582.0, 65.0], [585.0, 179.27118644067798], [584.0, 78.29629629629629], [583.0, 194.21333333333328], [600.0, 331.45454545454544], [601.0, 199.0], [605.0, 1214.1249999999998], [604.0, 282.0], [603.0, 547.5], [602.0, 1278.5], [606.0, 616.5], [607.0, 1284.0], [581.0, 139.33333333333334], [580.0, 214.33333333333334], [579.0, 186.6], [576.0, 208.0], [578.0, 223.0], [577.0, 212.0869565217391], [591.0, 211.0], [589.0, 383.0], [588.0, 303.3333333333333], [587.0, 263.4], [586.0, 303.6875], [592.0, 217.13333333333335], [595.0, 387.06250000000006], [596.0, 856.9285714285716], [597.0, 302.77777777777777], [598.0, 223.86363636363637], [599.0, 295.2857142857143], [594.0, 219.99999999999997], [593.0, 362.8965517241379], [632.0, 469.8571428571429], [620.0, 532.3888888888889], [608.0, 230.75], [611.0, 300.4367816091954], [609.0, 374.2857142857143], [610.0, 388.05769230769215], [612.0, 386.1666666666667], [613.0, 395.0], [615.0, 1191.9814814814815], [614.0, 830.0], [633.0, 993.5000000000001], [634.0, 1033.0357142857142], [635.0, 849.8333333333333], [636.0, 828.695652173913], [637.0, 722.8888888888889], [639.0, 937.5833333333333], [638.0, 979.75], [624.0, 423.3333333333333], [625.0, 303.2], [627.0, 1121.5714285714287], [629.0, 215.82485875706212], [630.0, 942.25], [631.0, 649.4], [628.0, 556.6666666666666], [617.0, 529.809523809524], [618.0, 280.33333333333337], [619.0, 307.5], [621.0, 346.73333333333335], [623.0, 270.8], [622.0, 291.078947368421], [664.0, 617.0588235294117], [655.0, 721.0], [662.0, 979.4285714285714], [669.0, 1593.7857142857142], [668.0, 2585.0], [667.0, 587.6666666666666], [666.0, 1725.0], [665.0, 529.3333333333334], [670.0, 1780.0], [671.0, 1486.2], [660.0, 634.5], [661.0, 182.55555555555554], [659.0, 1442.5714285714287], [658.0, 562.0], [656.0, 566.8625000000002], [657.0, 1051.5], [647.0, 1092.1], [646.0, 644.3333333333334], [642.0, 985.5], [644.0, 1730.75], [645.0, 1195.6666666666667], [643.0, 1044.7142857142858], [641.0, 960.5], [640.0, 2082.0], [663.0, 430.3333333333333], [654.0, 858.6923076923076], [653.0, 1140.3636363636363], [652.0, 747.48], [650.0, 719.0277777777778], [651.0, 1270.4], [649.0, 1097.1632653061226], [648.0, 748.6666666666667], [679.0, 911.2499999999999], [699.0, 279.66666666666663], [698.0, 75.16666666666666], [696.0, 515.2857142857144], [697.0, 236.0], [703.0, 724.7142857142858], [701.0, 1355.5], [702.0, 153.66666666666663], [688.0, 614.3333333333334], [700.0, 621.8], [691.0, 61.666666666666664], [690.0, 402.140625], [695.0, 600.8571428571428], [693.0, 804.0], [692.0, 480.8571428571429], [689.0, 756.3529411764706], [686.0, 788.25], [683.0, 1264.0526315789475], [682.0, 415.83333333333337], [685.0, 425.4], [684.0, 82.0], [680.0, 90.625], [681.0, 439.25], [678.0, 1075.5625], [677.0, 1287.6153846153848], [675.0, 1291.7272727272725], [676.0, 1197.3333333333333], [672.0, 1522.2], [687.0, 892.8333333333334], [673.0, 988.4705882352941], [728.0, 570.1818181818181], [734.0, 520.1960784313725], [735.0, 427.4411764705881], [733.0, 588.9152542372881], [732.0, 290.96296296296305], [731.0, 472.50000000000006], [730.0, 2066.5], [729.0, 270.375], [719.0, 130.28846153846155], [705.0, 98.0], [718.0, 106.0], [717.0, 502.10526315789474], [716.0, 1281.0], [710.0, 267.0], [709.0, 369.5238095238095], [708.0, 368.7592592592592], [707.0, 189.25], [711.0, 1494.0], [706.0, 1786.6249999999998], [714.0, 778.5], [713.0, 313.8333333333333], [712.0, 400.36666666666673], [727.0, 264.4761904761904], [726.0, 105.6], [725.0, 420.6428571428572], [723.0, 871.8333333333334], [724.0, 1389.0], [722.0, 825.1], [721.0, 192.62068965517244], [720.0, 255.94736842105266], [761.0, 301.3181818181818], [756.0, 299.6000000000001], [762.0, 357.69999999999993], [764.0, 330.5], [765.0, 594.0], [767.0, 586.9], [766.0, 372.6923076923077], [763.0, 575.3333333333334], [753.0, 396.625], [752.0, 176.62499999999997], [760.0, 257.38461538461536], [743.0, 281.6470588235295], [742.0, 241.33333333333334], [740.0, 1098.8571428571427], [739.0, 664.0], [738.0, 1026.0], [737.0, 696.75], [736.0, 380.2857142857143], [751.0, 735.1666666666666], [750.0, 312.57142857142856], [749.0, 792.0], [747.0, 234.86363636363632], [748.0, 423.7692307692307], [746.0, 1023.8571428571429], [745.0, 649.0], [744.0, 659.3333333333333], [759.0, 434.7857142857143], [758.0, 698.9411764705883], [757.0, 160.7543859649123], [755.0, 381.05555555555566], [754.0, 506.75], [772.0, 370.5714285714286], [795.0, 374.47058823529414], [773.0, 388.5], [771.0, 568.5], [769.0, 1315.9166666666667], [768.0, 725.5], [770.0, 812.6666666666666], [782.0, 630.6], [783.0, 693.625], [780.0, 396.0], [779.0, 469.43750000000006], [778.0, 487.0], [777.0, 442.625], [781.0, 358.7], [774.0, 508.0], [796.0, 357.7894736842105], [784.0, 299.8], [798.0, 356.2], [799.0, 503.22222222222223], [797.0, 792.4166666666666], [785.0, 661.31914893617], [786.0, 293.18518518518516], [792.0, 678.7777777777778], [775.0, 564.0], [793.0, 712.5555555555555], [794.0, 534.0], [791.0, 643.1777777777777], [790.0, 498.72727272727275], [788.0, 552.3125], [789.0, 1023.0999999999998], [787.0, 1211.7142857142856], [804.0, 692.1666666666666], [828.0, 358.0], [817.0, 543.5], [816.0, 514.0], [820.0, 378.0], [818.0, 327.0], [823.0, 344.0], [822.0, 340.0], [830.0, 541.5], [829.0, 392.5], [814.0, 400.0], [812.0, 791.0], [813.0, 609.0], [811.0, 271.85714285714283], [808.0, 596.0], [809.0, 709.0], [810.0, 245.0], [801.0, 308.3333333333333], [827.0, 298.6666666666667], [826.0, 511.0], [803.0, 575.0512820512821], [802.0, 628.0], [805.0, 513.0769230769231], [806.0, 392.0], [825.0, 273.0000000000001], [824.0, 272.22388059701484], [800.0, 357.0], [860.0, 1126.0], [863.0, 871.3333333333334], [862.0, 907.25], [861.0, 1665.5], [857.0, 429.0], [856.0, 638.0], [853.0, 607.75], [851.0, 976.0], [852.0, 1403.0], [850.0, 1237.5454545454545], [855.0, 862.3333333333333], [854.0, 1121.0], [849.0, 755.7058823529412], [848.0, 843.1111111111111], [847.0, 1135.1428571428573], [846.0, 1019.8], [832.0, 765.5384615384617], [835.0, 724.1538461538462], [834.0, 852.8181818181819], [836.0, 936.25], [833.0, 971.7], [839.0, 528.5172413793103], [838.0, 1195.0], [837.0, 865.2222222222222], [845.0, 948.5789473684212], [843.0, 720.9354838709676], [844.0, 1155.3928571428573], [841.0, 1248.3125], [840.0, 482.42857142857144], [842.0, 303.6666666666667], [869.0, 210.24999999999997], [893.0, 778.0], [890.0, 1202.4705882352941], [889.0, 1298.7000000000003], [888.0, 1495.1999999999998], [892.0, 463.0], [891.0, 1601.875], [871.0, 185.33333333333334], [870.0, 263.3333333333333], [868.0, 561.0], [867.0, 174.5], [865.0, 732.4285714285713], [866.0, 1167.3333333333333], [864.0, 1119.7499999999995], [887.0, 950.0], [886.0, 640.0], [885.0, 1036.5], [883.0, 1353.25], [882.0, 882.6666666666667], [880.0, 1626.5652173913043], [881.0, 1811.2857142857142], [895.0, 1942.2], [894.0, 1723.7142857142856], [879.0, 1254.75], [878.0, 481.4], [877.0, 773.4516129032257], [875.0, 1043.9285714285716], [876.0, 1182.25], [874.0, 1472.0000000000002], [873.0, 466.37142857142857], [872.0, 700.0], [921.0, 629.5], [925.0, 288.4], [927.0, 248.5], [926.0, 387.0], [915.0, 503.80000000000007], [913.0, 723.7142857142857], [914.0, 409.3529411764706], [912.0, 691.7], [917.0, 410.2096774193549], [916.0, 211.66551724137943], [924.0, 293.96153846153845], [922.0, 252.92857142857144], [923.0, 285.9090909090909], [920.0, 611.5333333333333], [903.0, 991.6923076923076], [900.0, 433.75], [901.0, 1101.5], [902.0, 1558.6363636363637], [899.0, 1842.75], [898.0, 1009.4444444444445], [897.0, 667.3000000000001], [896.0, 612.3076923076924], [911.0, 317.9836065573771], [910.0, 488.41666666666674], [909.0, 811.2], [908.0, 431.90000000000003], [906.0, 1038.0], [905.0, 1290.9696969696972], [904.0, 1364.923076923077], [907.0, 653.1666666666666], [919.0, 823.0], [918.0, 603.4800000000001], [933.0, 508.55555555555554], [955.0, 992.75], [954.0, 696.5000000000002], [953.0, 860.6071428571429], [952.0, 754.2452830188677], [935.0, 550.5], [934.0, 345.40000000000003], [956.0, 504.5], [957.0, 456.0], [941.0, 2412.6923076923076], [939.0, 2322.833333333333], [940.0, 2700.269230769231], [938.0, 412.3333333333333], [937.0, 1370.1666666666667], [936.0, 686.1666666666666], [943.0, 558.4166666666666], [942.0, 2133.5], [928.0, 395.8666666666667], [932.0, 471.0], [931.0, 213.7], [930.0, 678.2222222222222], [929.0, 285.12500000000006], [959.0, 627.7391304347825], [945.0, 2032.7222222222224], [944.0, 543.1875], [951.0, 576.9000000000001], [950.0, 706.4285714285714], [948.0, 582.0], [949.0, 242.5], [947.0, 224.75], [946.0, 603.625], [958.0, 941.4615384615385], [962.0, 880.0], [988.0, 682.0], [987.0, 267.00000000000006], [986.0, 305.8571428571429], [985.0, 189.22222222222223], [984.0, 157.0], [978.0, 874.5], [977.0, 433.3783783783784], [976.0, 543.9090909090909], [980.0, 820.5], [979.0, 575.0], [982.0, 179.5], [983.0, 696.0], [981.0, 344.7692307692308], [991.0, 383.0], [990.0, 325.4761904761905], [989.0, 561.5], [975.0, 904.3333333333334], [961.0, 568.5], [960.0, 629.5], [968.0, 862.1176470588235], [969.0, 855.0000000000001], [970.0, 339.0], [971.0, 1900.5], [972.0, 664.3], [974.0, 1088.0], [967.0, 1192.6666666666667], [966.0, 452.0], [965.0, 1165.5], [964.0, 756.6], [963.0, 888.4], [1007.0, 613.6666666666666], [997.0, 1400.5], [1017.0, 617.6666666666666], [999.0, 259.0], [998.0, 1878.5], [1016.0, 738.3333333333334], [1018.0, 920.5714285714286], [1019.0, 790.25], [992.0, 673.0], [996.0, 471.5], [995.0, 949.0], [1020.0, 901.6458333333335], [1011.0, 658.25], [1012.0, 925.25], [1013.0, 1095.3333333333335], [1014.0, 326.0], [1009.0, 493.0], [1021.0, 811.9473684210527], [1023.0, 406.0], [1008.0, 319.0], [1003.0, 539.7142857142857], [1006.0, 679.3333333333334], [1004.0, 423.12], [1002.0, 371.8125], [1001.0, 1460.6], [1000.0, 742.0], [1078.0, 575.0], [1060.0, 414.08333333333337], [1058.0, 358.25], [1062.0, 289.4496644295303], [1056.0, 548.0], [1086.0, 513.7142857142857], [1084.0, 550.6666666666666], [1082.0, 517.2777777777778], [1080.0, 630.0], [1076.0, 479.5625], [1074.0, 840.9090909090909], [1072.0, 619.0], [1032.0, 1149.8333333333333], [1034.0, 557.5], [1030.0, 642.4444444444445], [1024.0, 758.0], [1054.0, 634.125], [1052.0, 432.3333333333333], [1050.0, 670.0714285714286], [1048.0, 451.4], [1044.0, 629.3333333333334], [1046.0, 1754.0571428571423], [1040.0, 660.0], [1042.0, 1366.0], [1070.0, 567.6666666666666], [1066.0, 437.5], [1064.0, 614.4285714285714], [1138.0, 506.6], [1136.0, 576.5], [1142.0, 778.0], [1120.0, 539.0], [1122.0, 1230.3999999999999], [1144.0, 1501.0], [1146.0, 882.5], [1140.0, 1030.0], [1112.0, 608.0], [1110.0, 617.0], [1114.0, 604.5], [1116.0, 1166.4], [1118.0, 1080.0], [1088.0, 594.0], [1090.0, 592.4], [1092.0, 397.8666666666667], [1098.0, 527.0], [1096.0, 706.8333333333334], [1094.0, 737.6249999999999], [1100.0, 979.3333333333334], [1102.0, 712.6666666666666], [1108.0, 387.3333333333333], [1106.0, 438.0], [1104.0, 643.1428571428571], [1130.0, 813.3333333333333], [1128.0, 862.7777777777778], [1126.0, 830.2], [1134.0, 844.9], [1132.0, 1396.0000000000002], [1124.0, 804.9069767441861], [1210.0, 1442.6666666666667], [1154.0, 1060.7142857142858], [1158.0, 961.7142857142858], [1156.0, 1696.0], [1202.0, 1756.7], [1200.0, 1879.0], [1204.0, 1873.0], [1160.0, 1490.6666666666667], [1208.0, 1475.0], [1206.0, 1489.0], [1172.0, 1285.75], [1168.0, 1516.0], [1178.0, 1496.5], [1182.0, 1107.0], [1152.0, 1817.0], [1180.0, 1528.111111111111], [1184.0, 1444.2], [1198.0, 1001.0833333333335], [1194.0, 769.0], [1192.0, 399.5], [1188.0, 1494.0], [1186.0, 1488.2857142857144], [1196.0, 1485.6], [1214.0, 1417.0], [1258.0, 1035.0], [1256.0, 1035.0], [1254.0, 987.0], [1252.0, 1046.2307692307693], [1250.0, 1950.0], [1079.0, 549.0], [1037.0, 494.0], [1085.0, 586.7], [1083.0, 484.0], [1081.0, 503.77777777777777], [1077.0, 413.0], [1075.0, 540.0], [1073.0, 668.5416666666667], [1033.0, 666.0], [1035.0, 972.0], [1031.0, 519.4545454545454], [1055.0, 601.75], [1029.0, 841.7142857142857], [1027.0, 307.6363636363637], [1025.0, 932.0], [1053.0, 649.75], [1051.0, 418.0], [1049.0, 716.7857142857143], [1045.0, 657.5], [1047.0, 377.2222222222222], [1065.0, 617.1666666666666], [1071.0, 687.3125], [1061.0, 313.66037735849056], [1063.0, 424.0], [1059.0, 344.99999999999994], [1057.0, 447.22222222222223], [1087.0, 643.6], [1097.0, 800.6666666666666], [1149.0, 512.5], [1123.0, 1208.0], [1121.0, 1105.9696969696968], [1145.0, 504.0], [1141.0, 1171.5], [1139.0, 646.3636363636364], [1089.0, 656.9655172413794], [1115.0, 610.0], [1119.0, 710.375], [1091.0, 582.5714285714286], [1093.0, 737.5294117647059], [1095.0, 779.7435897435896], [1099.0, 451.0], [1101.0, 438.5], [1103.0, 851.25], [1137.0, 1290.6666666666665], [1111.0, 588.5], [1107.0, 425.0], [1105.0, 314.0], [1133.0, 846.2], [1127.0, 920.9999999999999], [1129.0, 679.3333333333333], [1131.0, 639.0], [1135.0, 943.9512195121956], [1125.0, 755.25], [1209.0, 1375.875], [1159.0, 1091.5], [1183.0, 1492.1538461538462], [1155.0, 1494.5], [1181.0, 1513.0], [1175.0, 1485.0], [1177.0, 1897.0], [1173.0, 1504.5], [1185.0, 680.0], [1189.0, 1507.0], [1187.0, 1466.0], [1213.0, 1432.2], [1211.0, 1457.0], [1205.0, 1457.0], [1203.0, 1464.0], [1201.0, 1736.2857142857142], [1167.0, 1828.0], [1165.0, 1458.6666666666667], [1161.0, 1509.0], [1163.0, 1590.0], [1199.0, 431.3974358974358], [1197.0, 1577.0], [1195.0, 1155.6153846153845], [1267.0, 944.0], [1259.0, 1013.6666666666666], [1257.0, 1044.0], [1255.0, 964.5], [1253.0, 1008.7222222222222], [1251.0, 966.0]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[723.842399999999, 552.5822000000012]], "isOverall": false, "label": "Create User-Aggregated", "isController": false}, {"data": [[2.0, 9.0], [3.0, 10.0], [4.0, 8.333333333333334], [5.0, 5.0], [6.0, 5.2], [7.0, 8.142857142857142], [8.0, 5.857142857142857], [9.0, 4.833333333333333], [10.0, 14.166666666666668], [11.0, 9.75], [12.0, 10.8], [13.0, 13.25], [14.0, 25.0], [15.0, 15.555555555555555], [16.0, 13.076923076923078], [17.0, 18.4], [18.0, 16.5], [19.0, 19.0], [20.0, 7.124999999999999], [21.0, 11.142857142857142], [22.0, 8.5], [23.0, 12.5], [24.0, 10.333333333333334], [25.0, 15.0], [27.0, 17.5], [28.0, 39.64705882352941], [29.0, 60.0], [30.0, 12.0], [31.0, 35.0], [33.0, 28.0], [32.0, 50.0], [34.0, 55.5], [35.0, 42.666666666666664], [36.0, 42.25], [37.0, 34.0], [39.0, 37.16666666666667], [38.0, 35.333333333333336], [40.0, 37.5], [41.0, 29.0], [43.0, 27.5], [42.0, 44.333333333333336], [45.0, 7.0], [44.0, 21.375000000000004], [46.0, 23.599999999999998], [47.0, 30.666666666666668], [49.0, 27.5], [48.0, 45.333333333333336], [51.0, 32.0], [50.0, 35.0], [53.0, 44.666666666666664], [52.0, 23.0], [55.0, 35.25], [54.0, 24.300000000000004], [56.0, 41.142857142857146], [57.0, 48.666666666666664], [59.0, 56.857142857142854], [58.0, 26.5], [61.0, 52.0], [60.0, 20.666666666666664], [63.0, 43.4], [62.0, 50.0], [67.0, 55.16666666666667], [66.0, 53.85714285714286], [64.0, 50.57142857142857], [65.0, 24.0], [71.0, 74.16666666666667], [69.0, 45.0], [70.0, 31.25], [68.0, 23.0], [74.0, 38.99999999999999], [72.0, 44.0], [75.0, 52.0], [73.0, 38.6], [79.0, 42.5], [78.0, 41.6], [77.0, 40.0], [76.0, 44.66666666666667], [82.0, 52.090909090909086], [81.0, 60.919999999999995], [80.0, 41.77777777777778], [83.0, 47.5], [85.0, 39.0], [84.0, 43.666666666666664], [86.0, 53.0], [87.0, 35.0], [91.0, 42.0], [90.0, 67.0], [89.0, 52.0], [88.0, 52.0], [95.0, 58.333333333333336], [94.0, 61.0], [93.0, 52.0], [92.0, 35.75], [98.0, 57.333333333333336], [99.0, 29.0], [97.0, 31.0], [96.0, 35.0], [103.0, 47.5], [102.0, 45.5], [101.0, 33.0], [100.0, 29.0], [107.0, 60.2], [105.0, 49.0], [104.0, 47.0], [106.0, 24.0], [108.0, 79.5], [111.0, 24.0], [109.0, 28.0], [115.0, 41.0], [114.0, 41.5], [113.0, 42.5], [112.0, 23.0], [119.0, 65.0], [117.0, 41.0], [116.0, 43.0], [118.0, 17.0], [123.0, 29.333333333333336], [122.0, 64.0], [120.0, 31.0], [127.0, 68.5], [126.0, 45.66666666666667], [124.0, 39.5], [125.0, 22.0], [134.0, 44.66666666666667], [132.0, 48.5], [129.0, 63.0], [135.0, 10.0], [133.0, 6.0], [131.0, 7.0], [130.0, 4.0], [128.0, 3.5], [136.0, 52.0], [143.0, 80.5], [141.0, 82.0], [140.0, 77.0], [139.0, 76.0], [138.0, 80.0], [137.0, 33.0], [151.0, 84.0], [150.0, 80.0], [148.0, 93.0], [147.0, 83.0], [146.0, 85.66666666666667], [158.0, 77.0], [157.0, 77.5], [155.0, 80.0], [153.0, 78.0], [152.0, 89.0], [174.0, 78.0], [173.0, 57.45283018867924], [172.0, 53.0], [171.0, 49.0], [170.0, 50.0], [169.0, 51.0], [168.0, 51.0], [183.0, 83.5], [182.0, 59.5], [181.0, 94.0], [180.0, 77.0], [179.0, 74.5], [178.0, 44.666666666666664], [176.0, 52.5], [191.0, 79.5], [190.0, 78.44827586206897], [189.0, 92.0], [188.0, 74.5], [187.0, 73.5], [199.0, 56.5], [197.0, 51.0], [196.0, 50.666666666666664], [195.0, 74.33333333333334], [194.0, 62.75], [192.0, 72.0], [198.0, 34.0], [207.0, 32.0], [206.0, 51.75], [204.0, 38.714285714285715], [203.0, 45.5], [202.0, 52.5], [201.0, 44.666666666666664], [200.0, 41.99999999999999], [215.0, 58.5], [213.0, 88.0], [211.0, 53.0], [210.0, 93.0], [209.0, 43.666666666666664], [208.0, 26.666666666666668], [214.0, 28.0], [212.0, 30.0], [223.0, 135.5], [221.0, 35.0], [220.0, 57.66666666666667], [219.0, 154.0], [218.0, 56.75], [216.0, 54.5], [222.0, 22.0], [217.0, 20.0], [231.0, 86.46153846153847], [229.0, 35.5], [228.0, 62.66666666666667], [226.0, 72.16666666666666], [224.0, 20.0], [230.0, 10.0], [227.0, 10.0], [239.0, 95.71428571428571], [238.0, 22.0], [237.0, 14.5], [236.0, 10.0], [235.0, 9.0], [234.0, 11.0], [233.0, 8.0], [232.0, 11.0], [247.0, 299.0], [245.0, 65.2], [244.0, 45.15384615384615], [242.0, 47.5], [240.0, 87.66666666666666], [243.0, 30.75], [241.0, 28.0], [246.0, 823.0], [253.0, 233.8], [255.0, 458.5], [254.0, 68.0], [252.0, 321.0], [251.0, 340.0], [249.0, 94.25], [248.0, 329.66666666666663], [250.0, 814.0], [259.0, 345.33333333333337], [270.0, 130.66666666666666], [271.0, 92.99999999999999], [264.0, 105.5], [268.0, 107.33333333333333], [269.0, 78.0], [266.0, 89.0], [265.0, 109.66666666666667], [263.0, 92.0], [262.0, 102.5], [261.0, 280.5], [260.0, 62.5], [258.0, 401.14285714285717], [256.0, 131.0], [257.0, 76.0], [286.0, 101.33333333333333], [287.0, 83.33333333333333], [285.0, 86.16666666666667], [284.0, 59.779661016949156], [283.0, 78.8], [282.0, 122.5], [281.0, 96.0], [280.0, 117.0], [279.0, 96.33333333333333], [273.0, 84.0], [272.0, 102.0], [275.0, 93.8], [274.0, 100.25], [278.0, 101.6], [276.0, 106.5], [277.0, 126.0], [303.0, 87.66666666666667], [302.0, 82.6], [298.0, 99.0], [301.0, 101.0], [300.0, 99.33333333333333], [291.0, 95.88888888888889], [290.0, 85.75], [289.0, 100.33333333333333], [295.0, 79.33333333333333], [288.0, 96.0], [299.0, 86.5], [297.0, 171.0], [296.0, 88.25], [294.0, 79.4], [293.0, 82.25], [292.0, 94.75], [317.0, 78.75], [318.0, 97.0], [316.0, 72.66666666666667], [307.0, 81.30769230769232], [306.0, 85.0], [305.0, 106.5], [311.0, 137.0], [315.0, 92.0], [313.0, 71.4], [314.0, 68.0], [312.0, 85.5], [319.0, 117.0], [310.0, 69.5], [308.0, 81.33333333333333], [309.0, 117.0], [327.0, 72.875], [324.0, 78.83333333333333], [323.0, 79.0], [334.0, 80.33333333333333], [333.0, 101.0], [332.0, 72.2], [322.0, 84.94999999999999], [325.0, 83.0], [328.0, 81.5], [330.0, 77.75], [329.0, 118.0], [335.0, 46.0], [326.0, 91.5], [321.0, 85.6], [320.0, 93.33333333333333], [350.0, 86.6], [341.0, 96.5], [340.0, 44.0], [343.0, 82.0], [342.0, 53.66666666666667], [339.0, 92.0], [338.0, 72.5], [337.0, 66.5], [336.0, 87.0], [351.0, 97.0], [349.0, 110.66666666666667], [348.0, 107.4], [347.0, 82.0], [346.0, 95.0], [345.0, 81.66666666666666], [344.0, 91.66666666666667], [364.0, 92.93333333333332], [366.0, 60.285714285714285], [365.0, 69.11111111111111], [363.0, 55.642857142857146], [362.0, 54.09090909090909], [360.0, 123.57142857142856], [361.0, 60.23076923076923], [367.0, 188.0], [358.0, 35.57142857142857], [357.0, 47.0], [356.0, 129.0], [355.0, 79.0], [354.0, 131.0], [353.0, 103.0], [352.0, 103.66666666666667], [359.0, 9.0], [381.0, 172.5], [383.0, 208.0], [382.0, 87.5], [380.0, 197.5], [371.0, 48.81818181818181], [370.0, 233.00000000000003], [369.0, 85.8], [368.0, 108.5], [375.0, 11.333333333333334], [379.0, 73.33333333333333], [378.0, 186.6], [377.0, 141.42857142857142], [376.0, 104.0], [374.0, 112.16666666666666], [373.0, 179.125], [372.0, 107.5], [396.0, 298.4], [398.0, 234.49999999999997], [399.0, 163.83333333333334], [393.0, 371.33333333333337], [392.0, 252.0], [397.0, 217.16666666666669], [395.0, 224.5], [394.0, 110.85714285714286], [391.0, 199.75], [389.0, 83.66666666666666], [390.0, 134.0], [388.0, 371.0], [387.0, 122.28571428571428], [386.0, 41.0], [384.0, 121.33333333333333], [385.0, 188.0], [413.0, 202.14285714285717], [412.0, 302.3333333333333], [403.0, 200.57142857142858], [402.0, 192.5], [401.0, 158.0], [400.0, 220.57142857142858], [411.0, 196.28571428571428], [410.0, 71.69767441860465], [409.0, 190.00000000000003], [408.0, 227.79999999999998], [415.0, 263.0], [414.0, 118.0], [407.0, 196.8], [405.0, 121.71428571428572], [406.0, 349.2], [404.0, 230.75], [419.0, 106.28571428571428], [426.0, 160.25], [427.0, 117.66666666666667], [425.0, 314.2], [424.0, 268.1428571428571], [431.0, 121.66666666666667], [430.0, 326.25], [428.0, 208.0], [423.0, 368.0], [422.0, 393.75], [421.0, 119.0], [420.0, 319.5], [418.0, 116.33333333333333], [416.0, 350.0], [417.0, 163.25], [444.0, 207.5], [446.0, 346.0], [447.0, 109.0], [440.0, 216.25], [445.0, 280.14285714285717], [443.0, 305.0], [442.0, 542.8333333333333], [441.0, 318.42857142857144], [439.0, 395.1666666666667], [432.0, 336.4], [433.0, 279.3333333333333], [435.0, 110.0], [434.0, 170.33333333333334], [438.0, 110.0], [437.0, 315.5], [436.0, 257.6], [462.0, 384.2], [463.0, 371.75], [461.0, 156.66666666666666], [460.0, 276.4], [459.0, 499.25], [458.0, 362.25], [457.0, 504.0], [456.0, 378.2], [455.0, 281.0], [449.0, 154.75], [451.0, 493.0], [450.0, 217.4], [448.0, 379.0], [454.0, 371.0], [453.0, 463.5], [452.0, 367.44444444444446], [467.0, 230.85714285714286], [477.0, 131.0], [479.0, 283.66666666666663], [478.0, 502.0], [476.0, 332.14285714285717], [474.0, 359.4], [473.0, 389.6], [475.0, 318.8571428571429], [472.0, 381.6], [469.0, 223.5], [468.0, 501.4], [466.0, 369.0], [465.0, 309.25], [464.0, 264.85714285714283], [471.0, 508.4], [470.0, 414.99999999999994], [483.0, 375.25], [488.0, 302.42857142857144], [486.0, 550.25], [484.0, 379.8333333333333], [485.0, 630.0], [481.0, 365.66666666666663], [482.0, 373.6666666666667], [480.0, 415.4], [487.0, 292.2], [490.0, 330.2857142857143], [489.0, 508.0], [491.0, 296.4], [494.0, 386.0], [495.0, 338.5], [493.0, 355.57142857142856], [492.0, 385.7142857142857], [508.0, 375.1666666666667], [511.0, 191.44444444444446], [504.0, 437.3333333333333], [510.0, 484.3333333333333], [509.0, 491.3333333333333], [505.0, 123.99999999999999], [507.0, 342.0], [506.0, 502.25], [502.0, 252.75], [503.0, 422.2], [496.0, 316.20000000000005], [497.0, 307.0], [501.0, 275.7142857142857], [500.0, 274.0], [499.0, 237.11111111111111], [498.0, 321.6], [536.0, 192.0], [542.0, 303.14285714285717], [543.0, 194.16666666666666], [530.0, 315.5], [529.0, 56.66666666666667], [528.0, 47.99999999999999], [540.0, 319.875], [541.0, 10.0], [539.0, 100.19999999999999], [537.0, 200.42857142857142], [538.0, 243.99999999999997], [527.0, 85.75], [512.0, 406.0], [514.0, 65.66666666666667], [513.0, 241.83333333333331], [516.0, 62.333333333333336], [515.0, 223.77777777777777], [518.0, 270.8], [519.0, 406.75], [517.0, 390.25], [526.0, 242.42857142857144], [524.0, 85.125], [523.0, 38.333333333333336], [525.0, 40.666666666666664], [522.0, 337.8], [520.0, 91.28571428571429], [521.0, 77.33333333333333], [535.0, 102.8], [534.0, 247.66666666666666], [532.0, 205.5], [533.0, 119.66666666666667], [531.0, 297.4615384615385], [569.0, 303.4], [574.0, 83.5], [575.0, 479.0909090909091], [560.0, 130.14285714285714], [562.0, 247.66666666666666], [561.0, 104.57142857142857], [564.0, 194.42857142857144], [563.0, 111.75], [572.0, 170.5], [573.0, 418.8], [571.0, 478.3333333333333], [570.0, 171.0], [568.0, 287.4], [551.0, 305.4285714285714], [549.0, 145.57142857142858], [550.0, 190.4], [548.0, 185.625], [546.0, 168.0], [547.0, 275.2], [545.0, 224.71428571428572], [544.0, 225.0], [559.0, 157.83333333333331], [558.0, 118.57142857142858], [557.0, 176.00000000000003], [556.0, 269.25], [555.0, 199.72727272727272], [554.0, 242.42105263157893], [553.0, 276.33333333333337], [552.0, 228.14285714285714], [567.0, 296.1666666666667], [566.0, 219.0], [565.0, 146.75], [580.0, 146.5], [585.0, 403.2307692307693], [584.0, 275.11764705882354], [583.0, 320.0344827586207], [600.0, 233.25], [603.0, 292.4], [602.0, 105.6], [601.0, 117.25], [605.0, 225.2], [604.0, 193.25], [607.0, 122.0], [606.0, 282.8333333333333], [593.0, 418.57142857142856], [592.0, 291.0], [595.0, 332.81818181818187], [598.0, 508.5909090909091], [599.0, 409.625], [597.0, 202.71428571428572], [596.0, 90.49999999999999], [594.0, 356.8888888888889], [582.0, 370.25], [581.0, 285.25], [579.0, 208.71428571428572], [578.0, 380.5714285714286], [577.0, 84.2], [576.0, 529.5714285714286], [591.0, 129.25], [590.0, 189.55555555555557], [589.0, 128.0], [588.0, 319.6666666666667], [587.0, 353.125], [586.0, 161.25], [635.0, 652.0], [623.0, 239.83333333333331], [622.0, 167.8620689655172], [621.0, 253.90909090909093], [620.0, 294.74999999999994], [619.0, 149.0], [618.0, 434.2], [617.0, 323.22222222222223], [616.0, 293.37499999999994], [624.0, 375.20000000000005], [626.0, 538.0], [625.0, 440.7], [628.0, 552.7692307692307], [627.0, 167.75000000000003], [630.0, 337.71428571428567], [631.0, 268.4444444444444], [629.0, 290.34821428571433], [639.0, 499.90909090909093], [638.0, 470.4], [637.0, 520.7647058823528], [636.0, 222.1], [634.0, 748.172727272727], [633.0, 279.3], [632.0, 381.8300000000001], [615.0, 289.07692307692304], [614.0, 182.00000000000003], [613.0, 327.66666666666663], [612.0, 216.33333333333331], [610.0, 189.33333333333331], [611.0, 106.63636363636363], [609.0, 135.8], [608.0, 426.3333333333333], [645.0, 501.2307692307692], [657.0, 147.88888888888889], [640.0, 306.0], [641.0, 515.625], [643.0, 692.4166666666667], [644.0, 298.375], [642.0, 264.7142857142857], [664.0, 204.1], [646.0, 420.99999999999994], [647.0, 350.7], [663.0, 132.8], [661.0, 174.13953488372093], [662.0, 206.66666666666666], [660.0, 129.47787610619466], [658.0, 157.66666666666666], [659.0, 118.8], [656.0, 18.17721518987342], [670.0, 213.75000000000006], [669.0, 156.66666666666666], [667.0, 392.22222222222223], [668.0, 140.81818181818178], [666.0, 71.36363636363636], [665.0, 208.44444444444446], [671.0, 248.4], [655.0, 294.22222222222223], [654.0, 170.28571428571428], [653.0, 181.6], [652.0, 250.24999999999997], [651.0, 142.875], [650.0, 366.00000000000006], [649.0, 282.5714285714286], [648.0, 398.3333333333333], [697.0, 133.6153846153846], [703.0, 128.19047619047618], [694.0, 310.0909090909091], [702.0, 164.05], [701.0, 249.1333333333333], [700.0, 267.4166666666667], [698.0, 210.0625], [699.0, 302.40000000000003], [687.0, 221.42857142857144], [672.0, 219.99999999999997], [675.0, 197.66666666666666], [674.0, 215.0], [673.0, 172.1], [677.0, 190.16666666666663], [676.0, 148.875], [679.0, 334.33333333333337], [696.0, 230.0], [678.0, 181.33333333333334], [686.0, 233.8181818181818], [685.0, 207.25], [684.0, 261.2857142857143], [683.0, 74.74999999999999], [682.0, 256.5714285714286], [681.0, 208.42857142857144], [680.0, 136.0], [695.0, 49.64285714285714], [692.0, 176.88888888888889], [693.0, 299.2], [691.0, 222.66666666666666], [690.0, 90.08333333333333], [689.0, 368.3636363636364], [688.0, 288.875], [733.0, 265.4], [723.0, 201.4], [735.0, 147.25], [734.0, 358.59999999999997], [720.0, 121.14285714285714], [722.0, 269.3333333333333], [721.0, 153.14285714285714], [732.0, 294.52941176470586], [731.0, 335.2222222222223], [729.0, 214.29999999999998], [728.0, 204.5625], [730.0, 220.125], [711.0, 222.5], [710.0, 366.5555555555556], [709.0, 170.4], [708.0, 160.30769230769232], [706.0, 221.0], [707.0, 285.2], [705.0, 97.83333333333333], [704.0, 285.25], [719.0, 146.79999999999998], [717.0, 304.92857142857133], [718.0, 333.7142857142857], [716.0, 94.42857142857142], [714.0, 278.07692307692304], [715.0, 348.37499999999994], [713.0, 190.60000000000002], [712.0, 142.35714285714286], [727.0, 145.0], [726.0, 286.7142857142857], [725.0, 215.91666666666666], [724.0, 221.14285714285714], [761.0, 211.0769230769231], [755.0, 308.52], [762.0, 303.5], [763.0, 211.12500000000003], [766.0, 240.00000000000003], [765.0, 237.88888888888889], [764.0, 280.9166666666667], [752.0, 345.84615384615387], [767.0, 183.99999999999997], [760.0, 222.9230769230769], [743.0, 249.04999999999998], [742.0, 406.93749999999994], [741.0, 277.1818181818182], [740.0, 297.64705882352933], [739.0, 351.43999999999994], [738.0, 303.2307692307692], [737.0, 267.25], [736.0, 345.00000000000006], [751.0, 364.5], [750.0, 238.24999999999997], [749.0, 310.21428571428567], [748.0, 384.92857142857144], [747.0, 406.59999999999997], [746.0, 337.8947368421053], [745.0, 328.5769230769231], [744.0, 317.30434782608694], [759.0, 264.30769230769226], [758.0, 354.0], [757.0, 172.83333333333331], [756.0, 329.0], [754.0, 261.40000000000003], [753.0, 262.09999999999997], [775.0, 282.28571428571433], [797.0, 454.0714285714286], [799.0, 534.6842105263157], [798.0, 261.0], [796.0, 421.19999999999993], [795.0, 401.8571428571429], [794.0, 501.28571428571433], [793.0, 362.1818181818182], [792.0, 399.00000000000006], [774.0, 352.42857142857144], [773.0, 267.12500000000006], [772.0, 304.4], [770.0, 216.84615384615387], [771.0, 309.0], [769.0, 337.6923076923077], [768.0, 165.5], [783.0, 382.2272727272727], [781.0, 305.1875], [782.0, 243.00000000000006], [780.0, 363.5333333333334], [779.0, 271.9166666666667], [778.0, 274.5], [777.0, 342.1111111111111], [776.0, 365.7142857142857], [788.0, 460.90909090909076], [791.0, 507.12499999999994], [790.0, 421.8461538461538], [789.0, 497.25], [787.0, 471.72727272727275], [785.0, 326.4], [786.0, 365.0909090909091], [784.0, 314.1578947368421], [825.0, 310.7692307692307], [830.0, 372.5833333333333], [831.0, 306.0], [816.0, 257.42857142857144], [818.0, 232.16666666666666], [817.0, 246.05882352941177], [829.0, 330.75], [828.0, 285.7777777777777], [827.0, 228.125], [826.0, 316.29999999999995], [824.0, 328.6], [807.0, 397.50000000000006], [806.0, 351.3333333333333], [805.0, 353.33333333333337], [804.0, 358.85714285714283], [803.0, 434.913043478261], [802.0, 477.18749999999994], [800.0, 349.66666666666663], [801.0, 261.75], [815.0, 291.99999999999994], [814.0, 249.8461538461538], [813.0, 281.85714285714283], [811.0, 288.46153846153845], [812.0, 193.14285714285714], [810.0, 309.66666666666674], [808.0, 347.9473684210526], [809.0, 228.625], [823.0, 308.7692307692308], [820.0, 303.55555555555554], [821.0, 351.6], [822.0, 227.81818181818178], [819.0, 281.09999999999997], [857.0, 566.1], [862.0, 288.08333333333337], [863.0, 274.07142857142856], [848.0, 439.25], [849.0, 465.8888888888889], [851.0, 480.4666666666667], [850.0, 345.9166666666667], [853.0, 802.5999999999999], [852.0, 495.00000000000006], [860.0, 487.0], [861.0, 304.6], [859.0, 614.0526315789474], [858.0, 462.65], [856.0, 532.3529411764706], [839.0, 310.1818181818182], [838.0, 328.69230769230774], [837.0, 271.7058823529411], [836.0, 402.3076923076924], [835.0, 397.3333333333333], [834.0, 307.62500000000006], [833.0, 367.44444444444446], [832.0, 435.15384615384613], [847.0, 400.36842105263156], [846.0, 538.0], [845.0, 339.4285714285715], [844.0, 416.76190476190476], [843.0, 345.69565217391306], [842.0, 443.6923076923077], [841.0, 395.5333333333333], [840.0, 433.8], [855.0, 596.3333333333334], [854.0, 570.1875], [890.0, 386.5], [894.0, 256.9], [895.0, 282.1111111111111], [880.0, 175.11538461538464], [882.0, 324.90909090909093], [883.0, 216.16666666666669], [881.0, 368.2727272727273], [893.0, 357.3636363636364], [892.0, 216.0], [891.0, 260.875], [889.0, 221.69230769230768], [888.0, 427.46153846153845], [871.0, 257.38461538461536], [870.0, 202.0], [869.0, 153.0], [867.0, 465.3076923076923], [866.0, 223.63636363636363], [865.0, 214.33333333333331], [864.0, 420.6923076923077], [879.0, 324.40000000000003], [868.0, 279.57142857142856], [878.0, 552.8181818181818], [876.0, 611.0], [877.0, 233.5], [875.0, 291.1111111111111], [873.0, 135.0], [874.0, 292.22222222222223], [872.0, 314.125], [885.0, 373.99999999999994], [886.0, 304.77777777777777], [887.0, 350.55555555555554], [884.0, 456.625], [920.0, 240.83333333333331], [926.0, 271.5454545454545], [927.0, 314.33333333333337], [912.0, 312.2857142857143], [913.0, 307.90909090909093], [925.0, 387.3], [924.0, 277.75], [923.0, 255.31578947368416], [921.0, 293.3333333333333], [922.0, 266.6428571428571], [910.0, 304.54545454545456], [896.0, 320.0], [911.0, 278.07142857142856], [898.0, 469.44444444444446], [897.0, 474.55555555555554], [900.0, 270.0], [899.0, 334.1111111111111], [902.0, 263.6666666666667], [903.0, 140.0], [901.0, 353.6], [909.0, 332.5], [908.0, 244.53846153846155], [907.0, 225.87500000000003], [906.0, 190.70000000000002], [904.0, 371.0], [905.0, 275.25], [919.0, 345.1], [918.0, 188.66666666666669], [917.0, 313.5], [915.0, 230.00000000000003], [916.0, 253.23636363636362], [914.0, 379.6666666666667], [953.0, 334.25], [958.0, 277.3], [959.0, 271.2], [944.0, 330.19298245614044], [947.0, 305.16666666666663], [946.0, 253.05882352941177], [945.0, 574.7733333333334], [949.0, 198.36363636363637], [948.0, 297.16666666666663], [956.0, 210.81818181818184], [957.0, 176.6], [955.0, 337.0], [954.0, 383.4166666666667], [952.0, 225.14285714285714], [935.0, 299.6], [934.0, 317.9], [933.0, 229.25], [932.0, 268.8181818181818], [929.0, 292.7142857142857], [931.0, 315.3], [930.0, 172.11111111111111], [928.0, 290.0], [943.0, 297.0769230769231], [942.0, 372.84], [941.0, 352.6363636363636], [940.0, 465.1188118811882], [939.0, 426.53571428571433], [937.0, 268.0], [938.0, 275.2307692307692], [936.0, 289.25000000000006], [951.0, 242.55555555555554], [950.0, 286.1], [986.0, 353.66666666666663], [991.0, 342.6], [990.0, 249.16666666666663], [989.0, 233.33333333333334], [988.0, 323.25], [987.0, 411.00000000000006], [978.0, 369.5555555555556], [977.0, 221.0], [976.0, 244.83333333333334], [979.0, 624.0], [981.0, 744.25], [980.0, 644.3333333333334], [983.0, 325.2], [982.0, 389.1666666666667], [975.0, 431.18181818181824], [974.0, 269.0], [961.0, 231.0625], [960.0, 147.55555555555554], [963.0, 293.61538461538464], [964.0, 139.33333333333334], [962.0, 218.66666666666666], [966.0, 228.375], [967.0, 196.57142857142858], [985.0, 334.6666666666667], [984.0, 498.0], [965.0, 184.88888888888889], [973.0, 326.75], [972.0, 297.62499999999994], [971.0, 171.83333333333331], [970.0, 204.73333333333335], [969.0, 320.85714285714283], [968.0, 421.6666666666667], [1016.0, 478.66666666666663], [1021.0, 392.6363636363636], [1022.0, 336.8], [1023.0, 243.33333333333334], [1009.0, 321.8], [1008.0, 272.22222222222223], [1020.0, 298.4], [1019.0, 404.66666666666663], [1018.0, 351.6], [1017.0, 416.4], [1007.0, 340.0], [993.0, 353.8], [992.0, 338.6], [999.0, 314.8], [998.0, 418.8333333333333], [996.0, 226.5], [995.0, 371.0], [997.0, 382.8888888888889], [994.0, 342.0], [1006.0, 448.5], [1004.0, 387.8999999999999], [1005.0, 352.0], [1003.0, 345.5], [1002.0, 283.3157894736842], [1001.0, 325.25], [1000.0, 447.3571428571429], [1015.0, 325.625], [1014.0, 459.0], [1013.0, 318.0], [1012.0, 499.0], [1011.0, 325.5], [1010.0, 317.0], [1030.0, 355.6666666666667], [1058.0, 378.7142857142857], [1062.0, 313.6666666666667], [1064.0, 257.4], [1066.0, 259.0], [1070.0, 144.0], [1068.0, 113.33333333333333], [1060.0, 201.6], [1056.0, 349.3333333333333], [1026.0, 527.0], [1024.0, 524.0], [1028.0, 366.8333333333333], [1036.0, 257.0], [1034.0, 281.0], [1032.0, 243.8], [1038.0, 287.75], [1074.0, 738.5], [1072.0, 346.6666666666667], [1078.0, 604.25], [1080.0, 413.66666666666663], [1076.0, 494.0], [1084.0, 628.1428571428571], [1082.0, 652.0], [1086.0, 1067.5714285714284], [1054.0, 623.8], [1052.0, 539.3333333333333], [1050.0, 303.2549019607843], [1048.0, 352.3333333333333], [1046.0, 474.4], [1044.0, 375.3333333333333], [1040.0, 398.5], [1042.0, 487.75], [1142.0, 832.625], [1096.0, 923.7272727272727], [1116.0, 500.91666666666663], [1092.0, 536.0000000000001], [1090.0, 1787.5], [1088.0, 1488.4285714285713], [1094.0, 1041.5], [1118.0, 957.2], [1114.0, 903.375], [1110.0, 709.1], [1112.0, 579.8571428571429], [1108.0, 331.6153846153846], [1106.0, 605.8333333333334], [1104.0, 810.5714285714286], [1148.0, 410.6666666666667], [1150.0, 774.0], [1122.0, 1025.2727272727273], [1120.0, 1176.375], [1126.0, 987.25], [1124.0, 588.3333333333334], [1130.0, 632.1428571428571], [1128.0, 1258.2857142857142], [1146.0, 499.4], [1144.0, 990.5], [1140.0, 1045.0], [1138.0, 1150.5714285714287], [1136.0, 706.7142857142857], [1102.0, 755.857142857143], [1100.0, 706.5714285714286], [1098.0, 653.4285714285714], [1134.0, 861.4285714285714], [1132.0, 646.2857142857142], [1164.0, 304.6666666666667], [1194.0, 803.3333333333333], [1192.0, 424.75], [1190.0, 762.0], [1198.0, 356.0], [1196.0, 467.1428571428571], [1188.0, 546.3333333333333], [1186.0, 410.0], [1184.0, 513.0], [1214.0, 626.0], [1212.0, 682.0], [1210.0, 629.0], [1208.0, 640.0], [1204.0, 313.66666666666663], [1202.0, 525.75], [1200.0, 407.8], [1166.0, 428.75], [1160.0, 388.0], [1162.0, 335.0], [1158.0, 524.0], [1156.0, 442.6666666666667], [1154.0, 406.14285714285717], [1152.0, 521.5], [1182.0, 507.0], [1180.0, 1027.25], [1178.0, 304.0], [1176.0, 618.6666666666666], [1174.0, 546.3333333333334], [1172.0, 469.00000000000006], [1168.0, 643.25], [1170.0, 529.4], [1254.0, 482.66666666666674], [1270.0, 402.3333333333333], [1268.0, 452.0], [1264.0, 222.5], [1262.0, 175.0], [1260.0, 345.0], [1258.0, 1.0], [1256.0, 501.6666666666667], [1252.0, 454.8181818181818], [1250.0, 458.45], [1031.0, 295.7142857142857], [1059.0, 491.16666666666663], [1065.0, 503.5], [1067.0, 136.66666666666669], [1071.0, 389.76190476190476], [1069.0, 104.2], [1063.0, 296.0], [1061.0, 432.5], [1057.0, 638.0], [1039.0, 95.0], [1075.0, 749.8333333333334], [1073.0, 630.1428571428571], [1079.0, 775.8571428571429], [1077.0, 707.5], [1085.0, 532.8571428571429], [1083.0, 737.6666666666666], [1081.0, 628.75], [1087.0, 219.0], [1055.0, 350.6666666666667], [1025.0, 328.6], [1027.0, 401.1538461538462], [1029.0, 280.33333333333337], [1035.0, 563.3333333333334], [1033.0, 189.66666666666669], [1037.0, 397.75], [1053.0, 289.0], [1051.0, 382.4285714285714], [1049.0, 642.7037037037038], [1047.0, 264.6], [1045.0, 420.875], [1043.0, 261.5], [1041.0, 353.25], [1139.0, 1182.5], [1149.0, 799.75], [1095.0, 774.090909090909], [1093.0, 690.3809523809524], [1091.0, 214.6], [1089.0, 432.6666666666667], [1099.0, 933.2], [1097.0, 1130.142857142857], [1103.0, 821.0], [1137.0, 497.6], [1101.0, 736.75], [1119.0, 785.25], [1113.0, 1284.4285714285713], [1115.0, 752.125], [1117.0, 1011.625], [1111.0, 884.4166666666667], [1105.0, 507.4], [1109.0, 1191.25], [1107.0, 931.5555555555555], [1151.0, 373.6666666666667], [1121.0, 731.9999999999999], [1125.0, 1359.2857142857144], [1123.0, 710.8333333333334], [1145.0, 466.2], [1147.0, 629.0], [1143.0, 1099.4], [1141.0, 394.0], [1129.0, 843.1818181818182], [1131.0, 620.25], [1135.0, 859.5833333333334], [1133.0, 1231.6], [1127.0, 1135.8], [1163.0, 282.5], [1181.0, 671.0], [1179.0, 441.5], [1177.0, 513.0], [1175.0, 1138.3333333333333], [1173.0, 837.6666666666666], [1171.0, 614.6666666666666], [1169.0, 325.5], [1193.0, 1173.9473684210525], [1195.0, 533.2666666666667], [1199.0, 465.62962962962956], [1197.0, 404.4], [1183.0, 687.0], [1185.0, 415.21428571428567], [1213.0, 624.0], [1211.0, 637.0], [1209.0, 640.0], [1207.0, 651.0], [1205.0, 642.5], [1191.0, 359.0], [1189.0, 990.5], [1187.0, 711.0], [1203.0, 394.75], [1201.0, 374.5], [1165.0, 676.0], [1159.0, 314.0], [1157.0, 873.0], [1155.0, 317.3333333333333], [1153.0, 1161.5], [1257.0, 455.2], [1267.0, 450.0], [1265.0, 445.0], [1263.0, 445.0], [1261.0, 175.0], [1259.0, 406.3333333333333], [1255.0, 491.66666666666663], [1251.0, 460.6666666666667], [1249.0, 463.0], [1253.0, 464.6136363636362]], "isOverall": false, "label": "Read User", "isController": false}, {"data": [[711.3847000000048, 313.6304000000001]], "isOverall": false, "label": "Read User-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1270.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9147.05, "minX": 1.73335758E12, "maxY": 245654.58333333334, "series": [{"data": [[1.73335758E12, 24525.833333333332], [1.73335764E12, 245654.58333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73335758E12, 9147.05], [1.73335764E12, 36913.166666666664]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73335764E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 60.51105157401201, "minX": 1.73335758E12, "maxY": 637.7678741658736, "series": [{"data": [[1.73335758E12, 108.00621890547276], [1.73335764E12, 637.7678741658736]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1.73335758E12, 60.51105157401201], [1.73335764E12, 358.05348536499184]], "isOverall": false, "label": "Read User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73335764E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 59.91627595445412, "minX": 1.73335758E12, "maxY": 532.0880600571979, "series": [{"data": [[1.73335758E12, 106.32711442786078], [1.73335764E12, 532.0880600571979]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1.73335758E12, 59.91627595445412], [1.73335764E12, 320.1331844363457]], "isOverall": false, "label": "Read User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73335764E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.4789015405224378, "minX": 1.73335758E12, "maxY": 2.424238862113549, "series": [{"data": [[1.73335758E12, 0.68594527363184], [1.73335764E12, 0.6438274547187798]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1.73335758E12, 0.4789015405224378], [1.73335764E12, 2.424238862113549]], "isOverall": false, "label": "Read User", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73335764E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.73335758E12, "maxY": 3048.0, "series": [{"data": [[1.73335758E12, 308.0], [1.73335764E12, 3048.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73335758E12, 2.0], [1.73335764E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73335758E12, 203.0], [1.73335764E12, 1422.6000000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73335758E12, 251.0], [1.73335764E12, 2671.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73335758E12, 69.0], [1.73335764E12, 399.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73335758E12, 225.0], [1.73335764E12, 1717.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73335764E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 19.5, "minX": 449.0, "maxY": 1064.0, "series": [{"data": [[2050.0, 365.0], [2181.0, 594.0], [1128.0, 469.5], [1325.0, 322.0], [1296.0, 1064.0], [1460.0, 63.0], [1557.0, 628.0], [1558.0, 509.0], [1641.0, 83.5], [1600.0, 352.0], [1855.0, 385.0], [449.0, 88.0], [1900.0, 264.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2050.0, 19.5], [1128.0, 383.0], [2181.0, 319.0], [1325.0, 311.0], [1296.0, 913.0], [1557.0, 126.0], [1558.0, 62.0], [1641.0, 21.0], [1600.0, 70.5], [1855.0, 171.5], [1900.0, 192.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2181.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 449.0, "maxY": 1064.0, "series": [{"data": [[2050.0, 364.5], [2181.0, 594.0], [1128.0, 469.5], [1325.0, 322.0], [1296.0, 1064.0], [1460.0, 63.0], [1557.0, 628.0], [1558.0, 509.0], [1641.0, 83.5], [1600.0, 352.0], [1855.0, 385.0], [449.0, 88.0], [1900.0, 264.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2050.0, 0.0], [1128.0, 0.0], [2181.0, 0.0], [1325.0, 0.0], [1296.0, 0.0], [1557.0, 0.0], [1558.0, 0.0], [1641.0, 0.0], [1600.0, 0.0], [1855.0, 0.0], [1900.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2181.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 60.18333333333333, "minX": 1.73335758E12, "maxY": 273.15, "series": [{"data": [[1.73335758E12, 60.18333333333333], [1.73335764E12, 273.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73335764E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.73335758E12, "maxY": 199.88333333333333, "series": [{"data": [[1.73335758E12, 48.9], [1.73335764E12, 199.88333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.73335758E12, 2.783333333333333], [1.73335764E12, 81.73333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.73335764E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73335764E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.9666666666666667, "minX": 1.73335758E12, "maxY": 107.1, "series": [{"data": [[1.73335758E12, 23.916666666666668], [1.73335764E12, 107.1]], "isOverall": false, "label": "Read User-success", "isController": false}, {"data": [[1.73335758E12, 0.9666666666666667], [1.73335764E12, 34.68333333333333]], "isOverall": false, "label": "Read User-failure", "isController": false}, {"data": [[1.73335758E12, 1.8166666666666667], [1.73335764E12, 47.083333333333336]], "isOverall": false, "label": "Create User-failure", "isController": false}, {"data": [[1.73335758E12, 24.983333333333334], [1.73335764E12, 92.78333333333333]], "isOverall": false, "label": "Create User-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73335764E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.783333333333333, "minX": 1.73335758E12, "maxY": 199.88333333333333, "series": [{"data": [[1.73335758E12, 48.9], [1.73335764E12, 199.88333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.73335758E12, 2.783333333333333], [1.73335764E12, 81.76666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73335764E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

